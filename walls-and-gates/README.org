* Leetcode: Walls and Gates                                      :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     bfs
:END:
---------------------------------------------------------------------
Walls and Gates
---------------------------------------------------------------------
Similar Problems:
- [[https://brain.dennyzhang.com/01-matrix][01 Matrix]]
- Tag: [[https://brain.dennyzhang.com/tag/bfs][#bfs]]
---------------------------------------------------------------------

You are given a m x n 2D grid initialized with these three possible values.

1. -1 - A wall or an obstacle.
- 0 - A gate.
- INF - Infinity means an empty room. We use the value 231 - 1 = 2147483647 to represent INF as you may assume that the distance to a gate is less than 2147483647.

Fill each empty room with the distance to its nearest gate. If it is impossible to reach a gate, it should be filled with INF.

For example, given the 2D grid:
#+BEGIN_EXAMPLE
INF  -1  0  INF
INF INF INF  -1
INF  -1 INF  -1
  0  -1 INF INF
#+END_EXAMPLE

After running your function, the 2D grid should be:
#+BEGIN_EXAMPLE
  3  -1   0   1
  2   2   1  -1
  1  -1   2  -1
  0  -1   3   4
#+END_EXAMPLE

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/walls-and-gates][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/walls-and-gates/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: https://brain.dennyzhang.com/walls-and-gates

#+END_SRC
