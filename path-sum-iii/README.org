* Leetcode: Path Sum III                                        :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #pathsum, #binarytree
:END:
---------------------------------------------------------------------
Path Sum III
---------------------------------------------------------------------
You are given a binary tree in which each node contains an integer value.

Find the number of paths that sum to a given value.

The path does not need to start or end at the root or a leaf, but it must go downwards (traveling only from parent nodes to child nodes).

The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.
#+BEGIN_EXAMPLE
Example:

root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8

      10
     /  \
    5   -3
   / \    \
  3   2   11
 / \   \
3  -2   1

Return 3. The paths that sum to 8 are:

1.  5 -> 3
2.  5 -> 2 -> 1
3. -3 -> 11
#+END_EXAMPLE

Blog link: http://brain.dennyzhang.com/path-sum-iii

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/path-sum-iii][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/path-sum-iii/description/][leetcode.com]]

Leave me comments, if you know how to solve.

#+BEGIN_SRC python

#+END_SRC
