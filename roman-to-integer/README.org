* Leetcode: Roman to Integer                                     :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math
:END:
---------------------------------------------------------------------
Roman to Integer
---------------------------------------------------------------------
Similar Problems:
- [[https://brain.dennyzhang.com/integer-to-roman][Integer to Roman]]
- Tag: [[https://brain.dennyzhang.com/tag/math][#math]]
---------------------------------------------------------------------
Given a roman numeral, convert it to an integer.

Input is guaranteed to be within the range from 1 to 3999.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/roman-to-integer][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/roman-to-integer/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

Reference:
- [[url-external:https://en.wikipedia.org/wiki/Roman_numerals#Roman_numeric_system][wikipedia: Roman numerals]]
- [[url-external:http://literacy.kent.edu/Minigrants/Cinci/romanchart.htm][Roman Numerals Chart]]
#+BEGIN_SRC go
// Blog link: https://brain.dennyzhang.com/roman-to-integer
// Related reading: 
// Basic Ideas: Examine from left to right.
//   If current is smaller than the next, substract. 
//   Otherwise, add
//
// Complexity: Time O(1), Space O(1)
func romanToInt(s string) int {
    m := map[byte]int{'I': 1, 'V':5, 'X':10, 'L':50, 'C':100, 'D':500, 'M':1000}
    res := 0
    for i, _ := range s {
        if i == len(s)-1 {
            res += m[s[i]]
        } else{
            if m[s[i]] < m[s[i+1]] {
                res -= m[s[i]]
            } else {
                res += m[s[i]]
            }
        }
    }
    return res
}
#+END_SRC
