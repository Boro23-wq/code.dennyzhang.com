* Leetcode: Factorial Trailing Zeroes                          :BLOG:Amusing:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math, inspiring
:END:
---------------------------------------------------------------------
Factorial Trailing Zeroes
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/number-of-digit-one][Number of Digit One]]
- [[https://code.dennyzhang.com/review-math][Review: Math Problems]]
- Tag: [[https://code.dennyzhang.com/tag/math][math]], [[https://code.dennyzhang.com/tag/inspiring][inspiring]]
---------------------------------------------------------------------
Given an integer n, return the number of trailing zeroes in n!.

Note: Your solution should be in logarithmic time complexity.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/factorial-trailing-zeroes][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/factorial-trailing-zeroes/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/factorial-trailing-zeroes
// Basic Ideas:
//  Count how many 5 factors in all number from 1 to n.
//  We have enough 2 to get 10
//
// Complexity: Time O(log(n)), Space O(1)
func trailingZeroes(n int) int {
    res := 0
    for n%5 == 0 {
        n = int(n/5)
        res += 1
    }
    return res
}
#+END_SRC
