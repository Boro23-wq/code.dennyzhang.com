* Leetcode: Binary Tree Maximum Path Sum                        :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #binarytree
:END:
---------------------------------------------------------------------
Binary Tree Maximum Path Sum
---------------------------------------------------------------------
Given a binary tree, find the maximum path sum.

For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain at least one node and does not need to go through the root.
#+BEGIN_EXAMPLE
For example:
Given the below binary tree,

       1
      / \
     2   3
Return 6.
#+END_EXAMPLE

Blog link: http://brain.dennyzhang.com/binary-tree-maximum-path-sum

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/binary-tree-maximum-path-sum][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/binary-tree-maximum-path-sum/description/][leetcode.com]]

Leave me comments, if you know how to solve.

#+BEGIN_SRC python
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def maxPathSum(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
#+END_SRC
