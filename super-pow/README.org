* Leetcode: Super Pow                                              :BLOG:Amusing:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     game, math, powerofn
:END:
---------------------------------------------------------------------
Super Pow
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/powx-n][Pow(x, n)]]
- Tag: [[https://code.dennyzhang.com/tag/recursive][#recursive]]
- [[https://code.dennyzhang.com/review-math][Review: Math Problems,]] Tag: [[https://code.dennyzhang.com/tag/math][math]]
- [[https://code.dennyzhang.com/review-game][Review: Game Problems]], [[https://code.dennyzhang.com/tag/game][Tag: #game]]
---------------------------------------------------------------------
Your task is to calculate a^b mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.
#+BEGIN_EXAMPLE
Example1:

a = 2
b = [3]

Result: 8
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example2:

a = 2
b = [1,0]

Result: 1024
#+END_EXAMPLE

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/super-pow][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/super-pow/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/super-pow
## Basic Ideas:
##     (2^120)%k == (((2^12)%k)^10)%k
## Complexity: Time O(n), Space O(1). n = len(b)
class Solution:
    def superPow(self, a, b):
        """
        :type a: int
        :type b: List[int]
        :rtype: int
        """
        length = len(b)
        if length == 0: return 1
        if length == 1: return pow(a, b[0]) % 1337
        v1 = self.superPow(a, b[:-1]) % 1337
        v1 = pow(v1, 10) % 1337
        v2 = self.superPow(a, [b[-1]])
        return (v1*v2)%1337
#+END_SRC
