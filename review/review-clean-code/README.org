* [#A] Review: Tips For Clean Code                              :BLOG:Review:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type: #blog
:END:
---------------------------------------------------------------------
Summarize skills to write clean code with fewer bugs
---------------------------------------------------------------------
- Move in four directions for a 2D matrix. [[https://code.dennyzhang.com/sliding-puzzle][Leetcode: Sliding Puzzle]]
#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/sliding-puzzle
for (ik, jk) in [(-1, 0), (1, 0), (0, 1), (0, -1)]:
    i2, j2 = i0+ik, j0+jk
    if i2<0 or i2 >= 2 or j2<0 or j2>=3: continue
    matrix[i0][j0], matrix[i2][j2] = matrix[i2][j2], matrix[i0][j0]
    newState = self.toString(matrix)
    if newState not in visited:
        queue.append(newState)
#+END_SRC
---------------------------------------------------------------------
- Presum
- Scan and save to avoid 2 pass
- Avoid unnecessary precheck
---------------------------------------------------------------------

See more [[https://code.dennyzhang.com/?s=blog+posts][blog_posts]].

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
* local notes                                                             :noexport:
[[color:#c7254e][Classic Graph Problems]]:
- 2 color graph: [[https://code.dennyzhang.com/is-graph-bipartite][Is Graph Bipartite]]
- Explore 0-1 island: [[https://code.dennyzhang.com/island-perimeter][Island Perimeter]]
---------------------------------------------------------------------
[[color:#c7254e][Classic String Problems]]:
- Deal with group inside a string: [[https://code.dennyzhang.com/reverse-words-in-a-string-ii][Reverse Words in a String II]]
- Split Strings with Multiple Delimiters: [[https://code.dennyzhang.com/different-ways-to-add-parentheses][Different Ways to Add Parentheses]]
- Find integer from string: [[https://code.dennyzhang.com/design-compressed-string-iterator][Design Compressed String Iterator]]
---------------------------------------------------------------------
[[color:#c7254e][Classic Tree Problems]]:
- Find path from root to the given node: [[https://code.dennyzhang.com/inorder-successor-in-bst][Inorder Successor in BST]]
---------------------------------------------------------------------
[[color:#c7254e][Classic DP Problems]]:
- Paint Fence: [[https://code.dennyzhang.com/paint-fence][Paint Fence]]
- Climb stairs: [[https://code.dennyzhang.com/min-cost-climbing-stairs][Min Cost Climbing Stairs]]
---------------------------------------------------------------------
[[color:#c7254e][Classic BinarySearch Problems]]:
[[color:#c7254e][Classic Problems]]:
- Meeting confict: [[https://code.dennyzhang.com/tag/calendarconflict][#calendarconflict]], [[https://code.dennyzhang.com/meeting-rooms][Meeting Rooms]]
- Longest increasing sequence(LIS): [[https://code.dennyzhang.com/longest-increasing-subsequence][Longest Increasing Subsequence]]
- Knapsack problems: [[https://code.dennyzhang.com/coin-change][Coin Change]], [[https://code.dennyzhang.com/coin-change-2][Coin Change 2]]
- Tower hopper problem: [[https://code.dennyzhang.com/jump-game][Jump Game]], [[https://code.dennyzhang.com/jump-game-ii][Jump Game II]]
- Maximum Subarray: [[https://code.dennyzhang.com/maximum-subarray][Maximum Subarray]]
- Word Ladder: [[https://code.dennyzhang.com/word-ladder][Word Ladder]]
- Subsets: [[https://code.dennyzhang.com/subsets][Subsets]]
- Subset Sum Problem: [[https://code.dennyzhang.com/combination-sum][Combination Sum]], [[https://code.dennyzhang.com/partition-equal-subset-sum][Partition Equal Subset Sum]]
- K-diff Pairs in an Array: [[https://leetcode.com/problems/k-diff-pairs-in-an-array/description/][K-diff Pairs in an Array]]
- Flattern nested data structure: [[https://code.dennyzhang.com/flatten-2d-vector][Flatten 2D Vector]]
- Sliding windows with substring comparision: [[https://code.dennyzhang.com/permutation-in-string][Permutation in String]]
- Detect palindrome: [[https://code.dennyzhang.com/longest-palindromic-substring][Longest Palindromic Substring]]
- [[https://code.dennyzhang.com/tag/recursive][#recursive]]: [[https://code.dennyzhang.com/powx-n][Pow(x, n)]]
