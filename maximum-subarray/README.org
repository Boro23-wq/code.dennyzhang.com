* Leetcode: Maximum Subarray                                              :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #inspiring, #array, #redo
:END:
---------------------------------------------------------------------
Maximum Subarray
---------------------------------------------------------------------
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

click to show more practice.

More practice:
If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.



Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/maximum-subarray][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/maximum-subarray/description/][leetcode.com]]

Leave me comments, if you know how to solve.

#+BEGIN_SRC python
class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
#+END_SRC
