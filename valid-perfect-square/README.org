* Leetcode: Valid Perfect Square                               :BLOG:Amusing:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math, binarysearch, sqrt
:END:
---------------------------------------------------------------------
Valid Perfect Square
---------------------------------------------------------------------
Similar Problems:
- [[https://brain.dennyzhang.com/review-math][Review: Math Problems]]
- [[https://brain.dennyzhang.com/review-sqrt][Review: sqrt Problems]]
- Tag: [[https://brain.dennyzhang.com/tag/math][math]], [[https://brain.dennyzhang.com/tag/sqrt][sqrt]]
---------------------------------------------------------------------
Given a positive integer num, write a function which returns True if num is a perfect square else False.

Note: Do not use any built-in library function such as sqrt.
#+BEGIN_EXAMPLE
Example 1:

Input: 16
Returns: True
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:

Input: 14
Returns: False
#+END_EXAMPLE

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/valid-perfect-square][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/valid-perfect-square/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: https://brain.dennyzhang.com/valid-perfect-square
## Basic Ideas: Binary search
##             Search in between [1^2, 2^2, 3^2, ... num^2]
##     But we have to use long for mid to avoid *mid\mid from overflow
## Complexity: Time O(log(n)), Space O(1)
class Solution(object):
    def isPerfectSquare(self, num):
        """
        :type num: int
        :rtype: bool
        """
        if num <= 0:
            return False
        left, right = 1, num
        while left<= right:
            mid = left + (right-left)/2
            v = mid*mid
            if v == num:
                return True
            elif v < num:
                left = mid + 1
            else:
                right = mid - 1
        return False
#+END_SRC
