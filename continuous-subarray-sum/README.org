* Leetcode: Continuous Subarray Sum                               :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     array
:END:
---------------------------------------------------------------------
Continuous Subarray Sum
---------------------------------------------------------------------
Similar Problems:
- Tag: [[https://code.dennyzhang.com/category/array][#array]]
---------------------------------------------------------------------
Given a list of non-negative numbers and a target integer k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to the multiple of k, that is, sums up to n*k where n is also an integer.

Example 1:
#+BEGIN_EXAMPLE
Input: [23, 2, 4, 6, 7],  k=6
Output: True
Explanation: Because [2, 4] is a continuous subarray of size 2 and sums up to 6.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [23, 2, 6, 4, 7],  k=6
Output: True
Explanation: Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.
#+END_EXAMPLE

Note:
1. The length of the array won't exceed 10,000.
- You may assume the sum of all the numbers is in the range of a signed 32-bit integer.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/continuous-subarray-sum][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/continuous-subarray-sum/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/continuous-subarray-sum

#+END_SRC
