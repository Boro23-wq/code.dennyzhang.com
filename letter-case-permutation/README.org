* Leetcode: Letter Case Permutation                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     combination, recursive, classic
:END:
---------------------------------------------------------------------
Letter Case Permutation
---------------------------------------------------------------------
Similar Problems:
- [[https://brain.dennyzhang.com/subsets-ii][Subsets II]]
- Tag: [[https://brain.dennyzhang.com/tag/combination][#combination]]
---------------------------------------------------------------------
Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.

Examples:
#+BEGIN_EXAMPLE
Input: S = "a1b2"
Output: ["a1b2", "a1B2", "A1b2", "A1B2"]
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Input: S = "3z4"
Output: ["3z4", "3Z4"]
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Input: S = "12345"
Output: ["12345"]
#+END_EXAMPLE

Note:

- S will be a string with length at most 12.
- S will consist only of letters or digits.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/letter-case-permutation][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/letter-case-permutation/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: https://brain.dennyzhang.com/letter-case-permutation
## Basic Ideas: recursive
##
## Complexity: Time O(n*pow(2, n)), Space O(pow(2, n))
class Solution:
    def letterCasePermutation(self, S):
        """
        :type S: str
        :rtype: List[str]
        """
        length = len(S)
        if length == 0: return [""]
        res = []
        ch = S[0]
        for item in self.letterCasePermutation(S[1:]):
            if ch.isdigit():
                res.append("%s%s" % (ch, item))
            else:
                res.append("%s%s" % (ch.lower(), item))
                res.append("%s%s" % (ch.upper(), item))
        return res
#+END_SRC
