* Leetcode: Max Stack                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     designquestion
:END:
---------------------------------------------------------------------
Max Stack
---------------------------------------------------------------------
Similar Problems:
- [[https://brain.dennyzhang.com/min-stack][Min Stack]]
- Tag: [[https://brain.dennyzhang.com/tag/designquestion][#designquestion]]
---------------------------------------------------------------------
Design a max stack that supports push, pop, top, peekMax and popMax.

1. push(x) -- Push element x onto stack.
- pop() -- Remove the element on top of the stack and return it.
- top() -- Get the element on the top.
- peekMax() -- Retrieve the maximum element in the stack.
- popMax() -- Retrieve the maximum element in the stack, and remove it. If you find more than one maximum elements, only remove the top-most one.

Example 1:
#+BEGIN_EXAMPLE
MaxStack stack = new MaxStack();
stack.push(5); 
stack.push(1);
stack.push(5);
stack.top(); -> 5
stack.popMax(); -> 5
stack.top(); -> 1
stack.peekMax(); -> 5
stack.pop(); -> 1
stack.top(); -> 5
#+END_EXAMPLE

Note:
1. -1e7 <= x <= 1e7
- Number of operations won't exceed 10000.
- The last four operations won't be called when stack is empty.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/majority-element-ii][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/majority-element-ii/description/][Leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: https://brain.dennyzhang.com/majority-element-ii

#+END_SRC
