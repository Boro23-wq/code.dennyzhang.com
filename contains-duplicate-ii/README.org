* Leetcode: Contains Duplicate II                               :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #slidingwindow, #containduplicate, #codetemplate
:END:
---------------------------------------------------------------------
Contains Duplicate II
---------------------------------------------------------------------
Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/contains-duplicate-ii][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/contains-duplicate-ii/description/][Leetcode.com]]

Leave me comments, if you know how to solve.

#+BEGIN_SRC python
## Baisc Ideas: sliding window
##              Keep a window of k-1. Maintain a Set with the window
##              Move the window towards the end.
##              If found an existing
##
## Complexity: Time O(n), Space O(k)
class Solution(object):
    def containsNearbyDuplicate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """
        length = len(nums)
        if length <= 1:
            return False
        if k <= 1:
            return True

        set_list = set([])
        index = min(k-1, length)
        # build sliding window from nums[0:index]
        for i in range(0, index):
            set_list.add(nums[i])

        # duplicate is found in the initial window
        if len(set_list) != index:
            return True

        # move the sliding window to the right
        for i in range(index, length):
            if nums[i] in set_list:
                return True
            set_list.remove(nums[i-index])
            set_list.add(nums[i])
        return False

s = Solution()
print s.containsNearbyDuplicate([-1, -1], 1) # True
print s.containsNearbyDuplicate([99, 99], 1) # True
#+END_SRC
