* Leetcode: Maximum Swap                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     array
:END:
---------------------------------------------------------------------
Maximum Swap
---------------------------------------------------------------------
Similar Problems:
- [[https://brain.dennyzhang.com/swap-adjacent-in-lr-string][Swap Adjacent in LR String]]
- [[https://brain.dennyzhang.com/global-and-local-inversions][Global and Local Inversions]]
- Tag: [[https://brain.dennyzhang.com/tag/linkedlist][#linkedlist]]
---------------------------------------------------------------------
Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.

Example 1:
#+BEGIN_EXAMPLE
Input: 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: 9973
Output: 9973
Explanation: No swap.
#+END_EXAMPLE

Note:
The given number is in the range [0, 108]

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/maximum-swap][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/maximum-swap/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: https://brain.dennyzhang.com/maximum-swap
## Basic Ideas: counter with [0, 1, 2, ... 9]
##
## Complexity: Time O(n), Space O(1)
class Solution:
    def maximumSwap(self, num):
        """
        :type num: int
        :rtype: int
        """
        res = num
        num_list = list(str(num))
        d = [0]*10
        for ch in num_list: d[int(ch)] += 1
        
        for i in range(len(num_list)):
            v1 = int(num_list[i])
            d[v1] -= 1
            v2 = -1
            for k in range(9, v1, -1):
                # detect the target
                if d[k] != 0:
                    v2 = k
                    break
            # from right to left, find v2 then switch
            if v2 != -1:
                for j in range(len(num_list)-1, i, -1):
                    if int(num_list[j]) == v2:
                        num_list[i], num_list[j] = num_list[j], num_list[i]
                        res = int(''.join(num_list))
                        return res
        return res
                        
s = Solution()    
print(s.maximumSwap(2736))
#+END_SRC
