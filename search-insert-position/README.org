* Leetcode: Search Insert Position                               :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #binarysearch, #codetemplate, #redo
:END:
---------------------------------------------------------------------
Search Insert Position
---------------------------------------------------------------------
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

#+BEGIN_EXAMPLE
Example 1:

Input: [1,3,5,6], 5
Output: 2
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:

Input: [1,3,5,6], 2
Output: 1
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 3:

Input: [1,3,5,6], 7
Output: 4
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 4:

Input: [1,3,5,6], 0
Output: 0
#+END_EXAMPLE

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/search-insert-position][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/search-insert-position/description/][Leetcode.com]]

Leave me comments, if you know how to solve.

#+BEGIN_SRC python
class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        i = 0
        for num in nums:
            if num >= target:
                return i
            i = i + 1
        return i
#+END_SRC
