* Leetcode: Perfect Number                                        :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #numbers, #redo
:END:
---------------------------------------------------------------------
numbers
---------------------------------------------------------------------
We define the Perfect Number is a positive integer that is equal to the sum of all its positive divisors except itself.

Now, given an integer n, write a function that returns true when it is a perfect number and false when it is not.
#+BEGIN_EXAMPLE
Example:
Input: 28
Output: True
Explanation: 28 = 1 + 2 + 4 + 7 + 14
#+END_EXAMPLE

Note: The input number n will not exceed 100,000,000. (1e8)

Blog link: http://brain.dennyzhang.com/perfect-number

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/perfect-number][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/perfect-number/description][leetcode.com]]

Leave me comments, if you know how to solve.

#+BEGIN_SRC python
## Basic Ideas: sqrt(num)
##     Sample Data:
##         1 2 7
## Complexity:
class Solution(object):
    def checkPerfectNumber(self, num):
        """
        :type num: int
        :rtype: bool
        """
        if num <= 1:
            return False
        import math
        sum = 1
        for i in range(2, int(math.sqrt(num))+1):
            if num % i == 0:
                sum += i
                if i != num/i:
                    sum += num/i
        return sum == num
#+END_SRC
