* Leetcode: Range Addition II                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #misc
:END:
---------------------------------------------------------------------
Range Addition II
---------------------------------------------------------------------
Similar Problems:
- Tag: [[http://brain.dennyzhang.com/tag/basic][#basic]]
---------------------------------------------------------------------
Given an m * n matrix M initialized with all 0's and several update operations.

Operations are represented by a 2D array, and each operation is represented by an array with two positive integers a and b, which means M[i][j] should be added by one for all 0 <= i < a and 0 <= j < b.

You need to count and return the number of maximum integers in the matrix after performing all the operations.

Example 1:
#+BEGIN_EXAMPLE
Input: 
m = 3, n = 3
operations = [[2,2],[3,3]]
Output: 4
Explanation: 
Initially, M = 
[[0, 0, 0],
 [0, 0, 0],
 [0, 0, 0]]

After performing [2,2], M = 
[[1, 1, 0],
 [1, 1, 0],
 [0, 0, 0]]

After performing [3,3], M = 
[[2, 2, 1],
 [2, 2, 1],
 [1, 1, 1]]

So the maximum integer in M is 2, and there are four of it in M. So return 4.
#+END_EXAMPLE
Note:
1. The range of m and n is [1,40000].
- The range of a is [1,m], and the range of b is [1,n].
- The range of operations size won't exceed 10,000.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/range-addition-ii][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/range-addition-ii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: http://brain.dennyzhang.com/range-addition-ii

#+END_SRC
