* Leetcode: Flip Game                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     game, string
:END:
---------------------------------------------------------------------
Flip Game
---------------------------------------------------------------------
Similar Problems:
- [[https://brain.dennyzhang.com/flip-game-ii][Flip Game II]]
- [[https://brain.dennyzhang.com/tag/string][Tag: #string]]
- [[https://brain.dennyzhang.com/tag/game][Tag: #game]]
---------------------------------------------------------------------
You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend take turns to flip two consecutive "++" into "--". The game ends when a person can no longer make a move and therefore the other person will be the winner.

Write a function to compute all possible states of the string after one valid move.

For example, given s = "++++", after one move, it may become one of the following states:
#+BEGIN_EXAMPLE
[
  "--++",
  "+--+",
  "++--"
]
#+END_EXAMPLE

If there is no valid move, return an empty list [].

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/flip-game][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/flip-game/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.

#+BEGIN_SRC python
## Blog link: https://brain.dennyzhang.com/flip-game
## Basic Ideas: One pass
## Complexity: Time O(n), Space O(1)
class Solution:
    def generatePossibleNextMoves(self, s):
        """
        :type s: str
        :rtype: List[str]
        """
        res = []
        for i in range(1, len(s)):
            if s[i-1:i+1] == '++':
                res.append(s[:i-1] + '--' + s[i+1:])
        return res
#+END_SRC
