* Leetcode: 4 Keys Keyboard                                     :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, inspiring, maxprofitwithcost, reachpoint, redo
:END:
---------------------------------------------------------------------
4 Keys Keyboard
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/4-keys-keyboard"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/followup-maxprofitwithcost][maxprofitwithcost]], [[https://code.dennyzhang.com/followup-reachpoint][#reachpoint]]
---------------------------------------------------------------------
Imagine you have a special keyboard with the following keys:

- Key 1: (A): Print one 'A' on screen.
- Key 2: (Ctrl-A): Select the whole screen.
- Key 3: (Ctrl-C): Copy selection to buffer.
- Key 4: (Ctrl-V): Print buffer on screen appending it after what has already been printed.

Now, you can only press the keyboard for N times (with the above four keys), find out the maximum numbers of 'A' you can print on screen.

Example 1:
#+BEGIN_EXAMPLE
Input: N = 3
Output: 3
Explanation: 
We can at most get 3 A's on screen by pressing following key sequence:
A, A, A
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: N = 7
Output: 9
Explanation: 
We can at most get 9 A's on screen by pressing following key sequence:
A, A, A, Ctrl A, Ctrl C, Ctrl V, Ctrl V
#+END_EXAMPLE

Note:
1. 1 <= N <= 50
- Answers will be in the range of 32-bit signed integer.


Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/4-keys-keyboard][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/4-keys-keyboard/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/4-keys-keyboard
// Basic Ideas: dynamic programming
//
//  3 operations: double and print the buffer
//
//  When N is big, usually two strategies
//    Print buffer, or double-print buffer
//
//  1. insert one
//  2. paste previous: (use 2 steps to update the buffer)
//  dp(i) = max(i, dp(j)*(i-j-1))
//        1 <= j <= i-3
//        dp[j] * (i-2-j+1)
//
// Complexity: Time O(n^2), Space O(n)
func maxA(N int) int {
    dp := make([]int, N+1)
    for i, _ := range dp {
        dp[i] = i
    }
    for i:=1; i<len(dp); i++ {
        for j:=1; j<=i-3; j++ {
            // i-2-j+1
            if dp[j]*(i-j-1) > dp[i] {
                dp[i]= dp[j]*(i-j-1)
            }
        }
    }
    return dp[N]
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
