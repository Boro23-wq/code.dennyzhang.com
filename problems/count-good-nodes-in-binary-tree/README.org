* LeetCode: Count Good Nodes in Binary Tree                     :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     binarytree, dfs
:END:
---------------------------------------------------------------------
Count Good Nodes in Binary Tree
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/count-good-nodes-in-binary-tree"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: LeetCode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-binarytree][#binarytree]], [[https://code.dennyzhang.com/review-dfs][#dfs]]
---------------------------------------------------------------------
Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.

Return the number of good nodes in the binary tree.

Example 1:
[[image-blog:Count Good Nodes in Binary Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/count-good-nodes-in-binary-tree/1.png]]
#+BEGIN_EXAMPLE
Input: root = [3,1,4,3,null,1,5]
Output: 4
Explanation: Nodes in blue are good.
Root Node (3) is always a good node.
Node 4 -> (3,4) is the maximum value in the path starting from the root.
Node 5 -> (3,4,5) is the maximum value in the path
Node 3 -> (3,1,3) is the maximum value in the path.
#+END_EXAMPLE

Example 2:
[[image-blog:Count Good Nodes in Binary Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/count-good-nodes-in-binary-tree/2.png]]
#+BEGIN_EXAMPLE
Input: root = [3,3,null,4,2]
Output: 3
Explanation: Node 2 -> (3, 3, 2) is not good, because "3" is higher than it.
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: root = [1]
Output: 1
Explanation: Root is considered as good.
#+END_EXAMPLE
 
Constraints:

- The number of nodes in the binary tree is in the range [1, 10^5].
- Each node's value is between [-10^4, 10^4].

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/count-good-nodes-in-binary-tree][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/count-good-nodes-in-binary-tree/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC python
## https://code.dennyzhang.com/count-good-nodes-in-binary-tree
## Basic Ideas: pre-order
## Complexity: Time O(n), Space O(1)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def goodNodes(self, root: TreeNode) -> int:
        res = 0
        def dfs(root, maxVal):
            nonlocal res
            if not root: return
            if root.val >= maxVal:
                res += 1
                maxVal = root.val
            dfs(root.left, maxVal)
            dfs(root.right, maxVal)
        dfs(root, -sys.maxsize)
        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
