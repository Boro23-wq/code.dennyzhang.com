* Leetcode: Domino and Tromino Tiling                            :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, inspiring, mod
:END:
---------------------------------------------------------------------
Domino and Tromino Tiling
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/review-dynamicprogramming][Review: Dynamic Programming Problems]]
- [[https://code.dennyzhang.com/review-mod][Review: mod Problems]]
- Tag: [[https://code.dennyzhang.com/tag/inspiring][#inspiring]], [[https://code.dennyzhang.com/tag/mod][#mod]], [[https://code.dennyzhang.com/tag/dynamicprogramming][#dynamicprogramming]]
---------------------------------------------------------------------
We have two types of tiles: a 2x1 domino shape, and an "L" tromino shape. These shapes may be rotated.
#+BEGIN_EXAMPLE
XX  <- domino

XX  <- "L" tromino
X
#+END_EXAMPLE

Given N, how many ways are there to tile a 2 x N board? Return your answer modulo 10^9 + 7.

(In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.)

Example:
#+BEGIN_EXAMPLE
Input: 3
Output: 5
Explanation: 
The five different ways are listed below, different letters indicates different tiles:
XYZ XXZ XYY XXY XYY
XYZ YYZ XZZ XYY XXY
#+END_EXAMPLE

Note:

N  will be in range [1, 1000].

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/domino-and-tromino-tiling][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/domino-and-tromino-tiling/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/domino-and-tromino-tiling
## Basic Ideas: dynamic programming
##
## Complexity: Time O(n), Space O(1)
class Solution:
    def numTilings(self, N):
        """
        :type N: int
        :rtype: int
        """
        if N==1: return 1
        if N==2: return 2
        if N==3: return 5
        mod_num = pow(10, 9)+7
        v3,v2,v1 = 5,2,1
        sum_v=4

        for i in range(4, N+1):
            v = (v3+v2+sum_v) % mod_num
            v3,v2,v1 = v,v3,v2
            sum_v=sum_v+v1*2
        return v3

# s = Solution()
# print(s.numTilings(4)) # 11
# print(s.numTilings(5)) # 24
# print(s.numTilings(6)) # 53
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
