* Leetcode: Unique Number of Occurrences                        :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     hashmap
:END:
---------------------------------------------------------------------
Unique Number of Occurrences
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/unique-number-of-occurrences"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-hashmap][#hashmap]]
---------------------------------------------------------------------
Given an array of integers arr, write a function that returns true if and only if the number of occurrences of each value in the array is unique.

Example 1:
#+BEGIN_EXAMPLE
Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: arr = [1,2]
Output: false
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
#+END_EXAMPLE
 
Constraints:

- 1 <= arr.length <= 1000
- -1000 <= arr[i] <= 1000

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/unique-number-of-occurrences][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/unique-number-of-occurrences/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/unique-number-of-occurrences
// Basic Ideas: hashmap
//
// Complexity: Time O(n), Space O(n)
func uniqueOccurrences(arr []int) bool {
    freqs := map[int]int{}
    for _, v := range arr {
        freqs[v]++
    }
    m := map[int]bool{}
    for _, v := range freqs {
        if _, ok := m[v]; !ok {
            m[v] = true
        } else {
            return false
        }
    }
    return true
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
