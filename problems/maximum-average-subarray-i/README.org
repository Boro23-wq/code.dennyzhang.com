* Leetcode: Maximum Average Subarray I                           :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     greedy, slidingwindow, classic
:END:
---------------------------------------------------------------------
Maximum Average Subarray I
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/maximum-average-subarray-i"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/maximum-average-subarray-ii][Leetcode: Maximum Average Subarray II]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/review-slidingwindow][#slidingwindow]], [[https://code.dennyzhang.com/tag/classic][#classic]]
---------------------------------------------------------------------
Given an array consisting of n integers, find the contiguous subarray of given length k that has the maximum average value. And you need to output the maximum average value.

Example 1:
#+BEGIN_EXAMPLE
Input: [1,12,-5,-6,50,3], k = 4
Output: 12.75
Explanation: Maximum average is (12-5-6+50)/4 = 51/4 = 12.75
#+END_EXAMPLE

Note:
1. 1 <= k <= n <= 30,000.
- Elements of the given array will be in the range [-10,000, 10,000].

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/maximum-average-subarray-i][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/maximum-average-subarray-i/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/maximum-average-subarray-i
## Basic Ideas: greedy + Sliding window
##
## Complexity: Time O(n), Space O(1)
class Solution:
    def findMaxAverage(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: float
        """
        length = len(nums)
        if length <= k: return float(sum(nums))/k

        curSum = sum(nums[0:k])
        maxSum = curSum
        for i in range(k, length):
            curSum += nums[i] - nums[i-k]
            maxSum = max(maxSum, curSum)

        return float(maxSum)/k
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
