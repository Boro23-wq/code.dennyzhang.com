* Leetcode: Trapping Rain Water                                  :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     trappingrain, twopass
:END:
---------------------------------------------------------------------
Trapping Rain Water
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/product-of-array-except-self][Product of Array Except Self]]
- [[https://code.dennyzhang.com/container-water][Trapping Rain Water]]
- Tag: [[https://code.dennyzhang.com/tag/trappingrain][#trappingrain]], [[https://code.dennyzhang.com/tag/twopass][#twopass]]
---------------------------------------------------------------------
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.
[[image-blog:Trapping Rain Water][https://raw.githubusercontent.com/dennyzhang/challenges-leetcode-interesting/master/images/rainwater_trap.png]]
The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!

Example:
#+BEGIN_EXAMPLE
Input: [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/trapping-rain-water][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/trapping-rain-water/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
Similar problem: [[https://code.dennyzhang.com/product-of-array-except-self][Product of Array Except Self]]

- Solution: Two pass

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/trapping-rain-water
// Basic Ideas: Two Pass
// For each cell, find the left maximum and right maximum
// Then caculate how much water current cell can hold
//
// Sapmle Data:
//    0,1,0,2,1,0,1,3,2,1,2,1
//    3,3,3,3,3,3,3,3,2,2,2,1
//    0,1,1,2,2,2,2,3,3,3,3,3
// Complexity: Time O(n), Space O(n)
func trap(height []int) int {
    lmax_list := make([]int, len(height))
    rmax_list := make([]int, len(height))
    max := 0
    // from left to right
    for i:=0; i<len(height); i++ {
        if height[i] > max { max = height[i] }
        lmax_list[i] = max
    }
    // from right to left
    max = 0
    for i:= len(height)-1; i>=0; i-- {
        if height[i] > max { max = height[i] }
        rmax_list[i] = max
    }
    // collect result
    res, border := 0, 0
    for i:=1; i<len(height)-1; i++ {
        border = lmax_list[i]
        if rmax_list[i] < border { border = rmax_list[i] }
        if height[i] < border { res += border-height[i] }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="http://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
