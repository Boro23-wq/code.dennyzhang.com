* Leetcode: Binary Tree Pruning                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     binarytree, inspiring
:END:
---------------------------------------------------------------------
Binary Tree Pruning
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-tree-pruning"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/tag/binarytree][#binarytree]]
---------------------------------------------------------------------
We are given the head node root of a binary tree, where additionally every node's value is either a 0 or a 1.

Return the same tree where every subtree (of the given tree) not containing a 1 has been removed.

(Recall that the subtree of a node X is X, plus every node that is a descendant of X.)

Example 1:
#+BEGIN_EXAMPLE
Input: [1,null,0,0,1]
Output: [1,null,0,null,1]
 
Explanation: 
Only the red nodes satisfy the property "every subtree not containing a 1".
The diagram on the right represents the answer.
#+END_EXAMPLE
[[image-blog:Binary Tree Pruning][https://raw.githubusercontent.com/dennyzhang/images/master/code/binarytree_prune1.png]]

Example 2:
#+BEGIN_EXAMPLE
Input: [1,0,1,0,0,0,1]
Output: [1,null,1,null,1]
#+END_EXAMPLE
[[image-blog:Binary Tree Pruning][https://raw.githubusercontent.com/dennyzhang/images/master/code/binarytree_prune2.png]]

Example 3:
#+BEGIN_EXAMPLE
Input: [1,1,0,1,1,0,1,0]
Output: [1,1,0,1,1,null,1]
#+END_EXAMPLE
[[image-blog:Binary Tree Pruning][https://raw.githubusercontent.com/dennyzhang/images/master/code/binarytree_prune3.png]]

Note:

- The binary tree will have at most 100 nodes.
- The value of each node will only be 0 or 1.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-tree-pruning][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/binary-tree-pruning/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/binary-tree-pruning
## Basic Ideas: post-order
##
## Complexity: Time O(n), Space O(1)
##
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def pruneTree(self, root):
        """
        :type root: TreeNode
        :rtype: TreeNode
        """
        if root is None: return None
        root.left = self.pruneTree(root.left)
        root.right = self.pruneTree(root.right)
        if root.val == 0 and not root.left and not root.right:
            return None
        else:
            return root
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
