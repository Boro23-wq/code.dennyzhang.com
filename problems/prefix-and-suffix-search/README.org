* Leetcode: Prefix and Suffix Search                             :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
#+TYPE: trie, inspiring
:PROPERTIES:
:type:     trie, inspiring, redo
:END:
---------------------------------------------------------------------
Prefix and Suffix Search
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/prefix-and-suffix-search"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-trie][#trie]], [[https://code.dennyzhang.com/review-inspiring][#inspiring]]
---------------------------------------------------------------------
Given many words, words[i] has weight i.

Design a class WordFilter that supports one function, WordFilter.f(String prefix, String suffix). It will return the word with given prefix and suffix with maximum weight. If no word exists, return -1.

Examples:
#+BEGIN_EXAMPLE
Input:
WordFilter(["apple"])
WordFilter.f("a", "e") // returns 0
WordFilter.f("b", "") // returns -1
#+END_EXAMPLE

Note:
1. words has length in range [1, 15000].
- For each test case, up to words.length queries WordFilter.f may be made.
- words[i] has length in range [1, 10].
- prefix, suffix have lengths in range [0, 10].
- words[i] and prefix, suffix queries consist of lowercase letters only.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/prefix-and-suffix-search][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/prefix-and-suffix-search/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/prefix-and-suffix-search
// Basic Ideas: Trie tree
//
// Complexity:
type WordFilter struct {
    children map[rune]*WordFilter
    ch rune
    weight int
}

func Constructor(words []string) WordFilter {
    root := WordFilter{map[rune]*WordFilter{}, ' ', -1}
    for i, word := range words {
        word2 := word
        for j:= len(word); j>=0; j-- {
            ch := '#'
            if j != len(word) { ch = rune(word[j]) }
            word2 = fmt.Sprintf("%s%s", string(ch), word2)
            // Add word2 to the trie tree
            p := &root
            for _, ch := range word2 {
                q, ok := p.children[ch]
                if ok {
                    if q.weight < i { q.weight = i }
                } else {
                    q = &WordFilter{map[rune]*WordFilter{}, ch, i}
                    p.children[ch] = q
                }
                p = q
            }
        }
    }
    return root
}

func (this *WordFilter) F(prefix string, suffix string) int {
    str := fmt.Sprintf("%s#%s", suffix, prefix)
    res := -1
    p := this
    for _, ch := range str {
        q, ok := p.children[ch]
        if !ok { return -1 }
        res = q.weight
        p = q
    }
    return res
}

/**
 * Your WordFilter object will be instantiated and called as such:
 * obj := Constructor(words);
 * param_1 := obj.F(prefix,suffix);
 */
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
