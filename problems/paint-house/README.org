* Leetcode: Paint House                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, inspiring, paintfence
:END:
---------------------------------------------------------------------
Paint House
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/paint-house"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/followup-paintfence][Series: Paint Fence & Follow-up]]
- [[https://code.dennyzhang.com/paint-fence][Paint Fence]]
- [[https://code.dennyzhang.com/review-dynamicprogramming][Review: Dynamic Programming Problems]]
- Tag: [[https://code.dennyzhang.com/tag/dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/tag/paintfence][#paintfence]]
---------------------------------------------------------------------
There are a row of n houses, each house can be painted with one of the three colors: red, blue or green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.

The cost of painting each house with a certain color is represented by a n x 3 cost matrix. 

#+BEGIN_EXAMPLE
For example, costs[0][0] is the cost of painting house 0 with color red; 
costs[1][2] is the cost of painting house 1 with color green, and so on...
Find the minimum cost to paint all houses.
#+END_EXAMPLE

Note:
All costs are positive integers.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/paint-house][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/paint-house/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/paint-house
## Basic Ideas: Dyanmic programming
##     For house after house1, it can only have 3 possilities.
##
## Complexity: Time O(n), Space O(1)
class Solution:
    def minCost(self, costs):
        """
        :type costs: List[List[int]]
        :rtype: int
        """
        length = len(costs)
        if length == 0: return 0

        dp = [None]*3

        # caculate house I
        dp = costs[0]

        # caculate the following house
        for i in range(1, length):
            l = [None]*3
            for j in range(0, 3):
                l[j] = costs[i][j] + min(dp[(j+1)%3], dp[(j+2)%3])
            dp = l
        return min(dp)
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
