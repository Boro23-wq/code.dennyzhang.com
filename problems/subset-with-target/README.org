* LintCode: Subset With Target                                  :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     combination, redo
:END:
---------------------------------------------------------------------
Subset With Target
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/review-combination][Review: Combinations and Permutations Problems]]
- Tag: [[https://code.dennyzhang.com/tag/combination][#combination]]
---------------------------------------------------------------------
Give an array and a target. We need to find the number of subsets which meet the following conditions:
The sum of the minimum value and the maximum value in the subset is less than the target.

Notice
- The length of the given array does not exceed 50.
- target <= 100000.

Example
Give array = [1,5,2,4,3], target = 4, return 2.

#+BEGIN_EXAMPLE
Explanation:
Only subset [1],[1,2] satisfy the condition, so the answer is 2.
Give array = [1,5,2,4,3],target = 5, return 5.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Explanation:
Only subset [1],[2],[1,3],[1,2],[1,2,3] satisfy the condition, so the answer is 5.
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/subset-with-target][code.dennyzhang.com]]

Credits To: [[http://www.lintcode.com/en/problem/subset-with-target/][LintCode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/subset-with-target
#!/usr/bin/env python
class Solution:
    """
    @param nums: the array
    @param target: the target
    @return: the number of subsets which meet the following conditions
    """
    ## Basic Ideas: Two pointers
    ## Complexity: Time O(n*log(n)), Space O(n)
    def subsetWithTarget(self, nums, target):
        nums.sort()
        res = 0
        left, right = 0, len(nums)-1
        while left <= right:
            v = nums[left] + nums[right]
            if v >= target:
                right -= 1
                continue
            # whether we can choose the left
            res += pow(2, (right-left))
            left += 1
        return res
        
# s = Solution()
# print(s.subsetWithTarget([1, 5, 2, 4, 3], 5)) # 5
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
