* Leetcode: Shortest Common Supersequence                       :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     editdistance, dynamicprogramming, redo
:END:
---------------------------------------------------------------------
Shortest Common Supersequence
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-common-supersequence"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/tag/editdistance][#editdistance]]
---------------------------------------------------------------------
Given two strings str1 and str2, return the shortest string that has both str1 and str2 as subsequences.  If multiple answers exist, you may return any of them.

(A string S is a subsequence of string T if deleting some number of characters from T (possibly 0, and the characters are chosen anywhere from T) results in the string S.)

Example 1:
#+BEGIN_EXAMPLE
Input: str1 = "abac", str2 = "cab"
Output: "cabac"
Explanation: 
str1 = "abac" is a subsequence of "cabac" because we can delete the first "c".
str2 = "cab" is a subsequence of "cabac" because we can delete the last "ac".
The answer provided is the shortest such string that satisfies these properties.
#+END_EXAMPLE

Note:

1. 1 <= str1.length, str2.length <= 1000
- str1 and str2 consist of lowercase English letters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-common-supersequence][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/shortest-common-supersequence/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/shortest-common-supersequence
// Basic Ideas: dynamic programming + edit distance
// Complexity: Time O(n*m*n), Space O(n*(n+m))
func shortestCommonSupersequence(str1 string, str2 string) string {
    l := make([]string, len(str2)+1)
    // Compare "" with s2[j...]
    for j:=len(str2)-1; j>=0; j-- {
        l[j] = string(str2[j])+l[j+1]
    }
    str := ""
    // Compare s1[i...] with s2[j...]
    for i:=len(str1)-1; i>=0; i-- {
        str = string(str1[i])+str
        l2 := make([]string, len(str2)+1)
        l2[len(str2)] = str
        for j:=len(str2)-1; j>=0; j-- {
            if str1[i] == str2[j] {
                l2[j] = string(str1[i]) + l[j+1]
            } else {
                if len(l[j]) < len(l2[j+1]) {
                    l2[j] = string(str1[i])+l[j]
                } else {
                    l2[j] = string(str2[j])+l2[j+1]
                }
            }
        }
        copy(l, l2)
    }
    return l[0]
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
