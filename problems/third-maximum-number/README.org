* Leetcode: Third Maximum Number                                 :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     heap, inspiring, manydetails
:END:
---------------------------------------------------------------------
Third Maximum Number
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/second-max-of-array][LintCode: Second Max of Array]]
- [[https://code.dennyzhang.com/review-heap][Review: Heap Problems]]
- [[https://code.dennyzhang.com/review-manydetails][Review: Problems With Many Details]]
- Tag: [[https://code.dennyzhang.com/tag/manydetails][#manydetails]], [[https://code.dennyzhang.com/tag/heap][#heap]]
---------------------------------------------------------------------
Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).

#+BEGIN_EXAMPLE
Example 1:
Input: [3, 2, 1]

Output: 1

Explanation: The third maximum is 1.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:
Input: [1, 2]

Output: 2

Explanation: The third maximum does not exist, so the maximum (2) is returned instead.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 3:
Input: [2, 2, 3, 1]

Output: 1

Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/third-maximum-number][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/third-maximum-number/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/third-maximum-number
## Basic Ideas: minheap
##
## Complexity: O(n), Space O(1)
import heapq
class Solution(object):
    def thirdMax(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        q = []
        for num in nums:
            if num not in q:
                heapq.heappush(q, num)
            if len(q) > 3: heapq.heappop(q)

        l = []
        while len(q) != 0:
            l.insert(0, heapq.heappop(q))
        return l[0] if len(l) != 3 else l[-1]
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
