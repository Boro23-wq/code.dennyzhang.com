* Leetcode: Minimum Cost Tree From Leaf Values                   :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     binarytree, inspiring, redo, dynamicprogramming, intervaldp, stack, greedy
:END:
---------------------------------------------------------------------
Minimum Cost Tree From Leaf Values
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/minimum-cost-tree-from-leaf-values"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/review-binarytree][#binarytree]], [[https://code.dennyzhang.com/review-inspiring][#inspiring]], [[https://code.dennyzhang.com/followup-intervaldp][#intervaldp]], [[https://code.dennyzhang.com/review-stack][#stack]], [[https://code.dennyzhang.com/review-greedy][#greedy]]
---------------------------------------------------------------------
Given an array arr of positive integers, consider all binary trees such that:

Each node has either 0 or 2 children;
The values of arr correspond to the values of each leaf in an in-order traversal of the tree.  (Recall that a node is a leaf if and only if it has 0 children.)
The value of each non-leaf node is equal to the product of the largest leaf value in its left and right subtree respectively.
Among all possible binary trees considered, return the smallest possible sum of the values of each non-leaf node.  It is guaranteed this sum fits into a 32-bit integer.

Example 1:
#+BEGIN_EXAMPLE
Input: arr = [6,2,4]
Output: 32
Explanation:
There are two possible trees.  The first has non-leaf node sum 36, and the second has non-leaf node sum 32.

    24            24
   /  \          /  \
  12   4        6    8
 /  \               / \
6    2             2   4
#+END_EXAMPLE
 
Constraints:

- 2 <= arr.length <= 40
- 1 <= arr[i] <= 15
- It is guaranteed that the answer fits into a 32-bit signed integer (ie. it is less than 2^31).

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/minimum-cost-tree-from-leaf-values][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: Interval DP

#+BEGIN_SRC go
// https://code.dennyzhang.com/minimum-cost-tree-from-leaf-values
// Basic Ideas: Interval DP
//
//   dp(i, j): arr[i...j]
//     With parent node, we can divide it into arr[i...k], arr[k+1...j]
// Complexity: Time O(n^3), Space O(n^2)
func max(x, y int) int {
    if x>y {
        return x
    } else {
        return y
    }
}

func min(x, y int) int {
    if x<y {
        return x
    } else {
        return y
    }
}

func mctFromLeafValues(arr []int) int {
    dp := make([][]int, len(arr))
    maxL := make([][]int, len(arr))
    
    for i, _ := range dp {
        dp[i] = make([]int, len(arr))
        maxL[i] = make([]int, len(arr))
    }
    // caculate max value for a range
    for i:=len(maxL)-1; i>=0; i-- {
        for j:=i; j<len(maxL); j++ {
            if j == i {
                maxL[i][j] = arr[i]
                continue
            }
            maxL[i][j] = max(maxL[i][j-1], arr[j])
        }
    }
    // dp
    for i:=len(arr)-1; i>=0; i-- {
        for j:=i+1; j<len(arr); j++ {
            dp[i][j] = 1<<32-1
            for k:=i; k+1<=j; k++ {
                dp[i][j] = min(dp[i][j], dp[i][k]+dp[k+1][j]+maxL[i][k]*maxL[k+1][j])
            }
        }
    }
    return dp[0][len(arr)-1]
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
