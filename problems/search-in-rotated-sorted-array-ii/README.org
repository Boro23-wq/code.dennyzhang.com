* Leetcode: Search in Rotated Sorted Array II                   :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     inspiring, binarysearch, rotateoperation
:END:
---------------------------------------------------------------------
Search in Rotated Sorted Array II
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/search-in-rotated-sorted-array][Search in Rotated Sorted Array]]
- [[https://code.dennyzhang.com/review-binarysearch][Review: Binary Search Problems]]
- Tag: [[https://code.dennyzhang.com/tag/binarysearch][#binarysearch]], [[https://code.dennyzhang.com/tag/rotateoperation][#rotateoperation]]
---------------------------------------------------------------------
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Write a function to determine if a given target is in the array.

The array may contain duplicates.

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/search-in-rotated-sorted-array-ii][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/search-in-rotated-sorted-array-ii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/search-in-rotated-sorted-array-ii
## Basic Ideas: The worst case would be: 1111112, then you need to check 2 or 3
##
## Complexity: Time O(n), Space O(1)
class Solution:
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: bool
        """
        for num in nums:
            if num == target: return True
        return False
#+END_SRC
