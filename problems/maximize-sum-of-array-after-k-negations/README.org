* Leetcode: Maximize Sum Of Array After K Negations             :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     array, math, greedy
:END:
---------------------------------------------------------------------
Maximize Sum Of Array After K Negations
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/maximize-sum-of-array-after-k-negations"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- Tag: [[https://code.dennyzhang.com/review-array][#array]], [[https://code.dennyzhang.com/review-math][#math]], [[https://code.dennyzhang.com/review-greedy][#greedy]]
---------------------------------------------------------------------
Given an array A of integers, we must modify the array in the following way: we choose an i and replace A[i] with -A[i], and we repeat this process K times in total.  (We may choose the same index i multiple times.)

Return the largest possible sum of the array after modifying it in this way.
 
Example 1:
#+BEGIN_EXAMPLE
Input: A = [4,2,3], K = 1
Output: 5
Explanation: Choose indices (1,) and A becomes [4,-2,3].
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: A = [3,-1,0,2], K = 3
Output: 6
Explanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: A = [2,-3,-1,5,-4], K = 2
Output: 13
Explanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].
#+END_EXAMPLE
 
Note:

1. 1 <= A.length <= 10000
- 1 <= K <= 10000
- -100 <= A[i] <= 100

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/maximize-sum-of-array-after-k-negations][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/maximize-sum-of-array-after-k-negations/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/maximize-sum-of-array-after-k-negations
// Basic Ideas: array + greedy
//
// Complexity: Time O(n*log(n)), Space O(1)
import "sort"
func largestSumAfterKNegations(A []int, K int) int {
    sort.Ints(A)
    for i, v := range A {
        if K<=0 || v >= 0 {
            break
        }
        A[i] = -A[i]
        K--
    }
    minAbs := 1<<31-1
    sum := 0
    for _, v := range A {
        if v>=0 && v < minAbs {
            minAbs = v
        }
        sum += v
    }
    if K%2 == 1 {
        sum -= 2*minAbs
    }
    return sum
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
