* Leetcode: Lexicographical Numbers                                   :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     lexicographical, redo
:END:
---------------------------------------------------------------------
Given an integer n, return 1 - n in lexicographical order.
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/lexicographical-numbers"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/gray-code][Gray Code]]
---------------------------------------------------------------------
Given an integer n, return 1 - n in lexicographical order.

For example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].

Please optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/lexicographical-numbers][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/lexicographical-numbers/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/lexicographical-numbers
## Basic Ideas: DFS
##
##  When to push? How to find the neighbors?
##
## Complexity: Time O(k), Space O(d)
##             k = size of final result
##             d = digits of n
class Solution:
    def lexicalOrder(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        res, stack = [], []
        v = 1
        while v <= n:
            res.append(v)
            stack.append(v)
            v = v*10

        while len(stack) != 0:
            v = stack.pop()+1
            while v <= n:
                res.append(v)
                if v % 10 != 9:
                    stack.append(v)
                v = v*10
        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
