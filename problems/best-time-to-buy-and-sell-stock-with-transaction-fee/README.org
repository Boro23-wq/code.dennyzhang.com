* Leetcode: Best Time to Buy and Sell Stock with Transaction Fee :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     classic, dynamicprogramming, buystock, maxprofitwithcost
:END:
---------------------------------------------------------------------
Best Time to Buy and Sell Stock with Transaction Fee
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/best-time-to-buy-and-sell-stock-with-transaction-fee"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/tag/classic][#classic]], [[https://code.dennyzhang.com/followup-buystock][#buystock]], [[https://code.dennyzhang.com/followup-maxprofitwithcost][maxprofitwithcost]]
---------------------------------------------------------------------
Your are given an array of integers prices, for which the i-th element is the price of a given stock on day i; and a non-negative integer fee representing a transaction fee.

You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction. You may not buy more than 1 share of a stock at a time (ie. you must sell the stock share before you buy again.)

Return the maximum profit you can make.

Example 1:
#+BEGIN_EXAMPLE
Input: prices = [1, 3, 2, 8, 4, 9], fee = 2
Output: 8
Explanation: The maximum profit can be achieved by:
Buying at prices[0] = 1
Selling at prices[3] = 8
Buying at prices[4] = 4
Selling at prices[5] = 9
The total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.
#+END_EXAMPLE

Note:

- 0 < prices.length <= 50000.
- 0 < prices[i] < 50000.
- 0 <= fee < 50000.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/best-time-to-buy-and-sell-stock-with-transaction-fee][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/best-time-to-buy-and-sell-stock-with-transaction-fee
// Basic Ideas: dynamic programming
//
//  When we want to sell, we only care there is 1 share.
//  And we don't care where it comes from
//
//  dp[i][0]: max profit without 1 share
//  dp[i][1]: max profit with 1 share
//
// Complexity: Time O(n), Space O(1)
func max(x, y int) int {
    if x>y {
        return x
    } else {
        return y
    }
}

func maxProfit(prices []int, fee int) int {
    if len(prices) == 0 {
        return 0
    }
    dp_nokeep, dp_keep := 0, -prices[0]
    for i:=1; i<len(prices); i++ {
        // no buy, or sell yesterday's share
        // buy one, or keep yesterday's share
        dp_nokeep, dp_keep = max(dp_nokeep, dp_keep+prices[i]-fee), 
                            max(dp_keep, dp_nokeep - prices[i])
    }
    // when return, we won't want to keep 1 share
    return dp_nokeep
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
