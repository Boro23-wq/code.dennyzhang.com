* Leetcode: Two City Scheduling                                  :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     greedy
:END:
---------------------------------------------------------------------
Two City Scheduling
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/two-city-scheduling"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/minimize-rounding-error-to-meet-target][LeetCode: Minimize Rounding Error to Meet Target]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-greedy][#greedy]]
---------------------------------------------------------------------
There are 2N people a company is planning to interview. The cost of flying the i-th person to city A is costs[i][0], and the cost of flying the i-th person to city B is costs[i][1].

Return the minimum cost to fly every person to a city such that exactly N people arrive in each city.

Example 1:
#+BEGIN_EXAMPLE
Input: [[10,20],[30,200],[400,50],[30,20]]
Output: 110
Explanation: 
The first person goes to city A for a cost of 10.
The second person goes to city A for a cost of 30.
The third person goes to city B for a cost of 50.
The fourth person goes to city B for a cost of 20.

The total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.
#+END_EXAMPLE

Note:

1. 1 <= costs.length <= 100
- It is guaranteed that costs.length is even.
- 1 <= costs[i][0], costs[i][1] <= 1000

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/two-city-scheduling][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/two-city-scheduling/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/two-city-scheduling
// Basic Ideas: greedy
//  Get the absolute difference for each person
//  Start to settle down with persons whos difference are bigger
// Complexity: Time O(n*log(n)), Space O(1)
import "sort"
func abs(v int) int {
    if v<0 { return -v }
    return v
}

func twoCitySchedCost(costs [][]int) int {
    sort.Slice(costs, func(i, j int) bool {
        return abs(costs[i][0]-costs[i][1]) > abs(costs[j][0]-costs[j][1])
    })

    N := len(costs)/2
    cityA, cityB := N, N
    res := 0
    for _, cost := range costs {
        if cityA == 0 {
            res += cost[1]
        } else if cityB == 0 {
            res += cost[0]
        } else {
            if cost[0] < cost[1] {
                res += cost[0]
                cityA--
            } else {
                res += cost[1]
                cityB--
            }
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
