* Leetcode: Random Pick Index                                    :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     reservoirsampling
:END:
---------------------------------------------------------------------
Random Pick Index
---------------------------------------------------------------------
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/reservoirsampling][#reservoirsampling]]
---------------------------------------------------------------------
Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.

Note:
The array size can be very large. Solution that uses too much extra space will not pass the judge.

Example:
#+BEGIN_EXAMPLE
int[] nums = new int[] {1,2,3,3,3};
Solution solution = new Solution(nums);

// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.
solution.pick(3);

// pick(1) should return 0. Since in the array only nums[0] is equal to 1.
solution.pick(1);
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/random-pick-index][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/random-pick-index/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/random-pick-index
## Basic Ideas: Reservior Sampling
##
## Complexity: Time O(n), Space O(1)
import random
class Solution:

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        self.nums = nums

    def pick(self, target):
        """
        :type target: int
        :rtype: int
        """
        i, count, res = 0, 0, -1
        for i in range(0, len(self.nums)):
            if self.nums[i] == target:
                res = i
                count += 1
                break

        for i in range(res+1, len(self.nums)):
            if self.nums[i] == target:
                count += 1
                random_v = random.randint(1, count)
                if random_v == 1:
                    res = i
        return res

# Your Solution object will be instantiated and called as such:
# obj = Solution(nums)
# param_1 = obj.pick(target)
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="http://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
