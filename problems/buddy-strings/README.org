* Leetcode: Buddy Strings                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string
:END:
---------------------------------------------------------------------
Buddy Strings
---------------------------------------------------------------------
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/string][#string]]
---------------------------------------------------------------------
Given two strings A and B of lowercase letters, return true if and only if we can swap two letters in A so that the result equals B.
 
Example 1:
#+BEGIN_EXAMPLE
Input: A = "ab", B = "ba"
Output: true
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: A = "ab", B = "ab"
Output: false
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: A = "aa", B = "aa"
Output: true
#+END_EXAMPLE

Example 4:
#+BEGIN_EXAMPLE
Input: A = "aaaaaaabc", B = "aaaaaaacb"
Output: true
#+END_EXAMPLE

Example 5:
#+BEGIN_EXAMPLE
Input: A = "", B = "aa"
Output: false
#+END_EXAMPLE
 
Note:

1. 0 <= A.length <= 20000
- 0 <= B.length <= 20000
- A and B consist only of lowercase letters.

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/buddy-strings][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/buddy-strings/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/buddy-strings
// Basic Ideas
// Complexity: Time O(n+m), Space O(1)
func buddyStrings(A string, B string) bool {
    if len(A) != len(B) { return false }
    m := map[rune]int{}
    diffList := []int{}
    for i, ch:= range A {
        if ch != rune(B[i]) {
            diffList = append(diffList, i)
            if len(diffList) >2 { return false }
        }
        m[ch]++
    }

    if len(diffList) == 1 { return false }
    if len(diffList) == 2 { 
        i, j:= diffList[0], diffList[1]
        return A[i] == B[j] && A[j] == B[i]
    }
    for key := range m {
        if m[key]>=2 { return true }
    }
    return false
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="http://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
