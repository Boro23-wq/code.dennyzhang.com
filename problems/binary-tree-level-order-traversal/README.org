* Leetcode: Binary Tree Level Order Traversal                                   :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     codetemplate, classic, bfs, treetraversal
:END:
---------------------------------------------------------------------
Binary Tree Level Order Traversal
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-tree-level-order-traversal"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-treetraversal][#treetraversal]], [[https://code.dennyzhang.com/tag/classic][#classic]], [[https://code.dennyzhang.com/review-bfs][#bfs]]
---------------------------------------------------------------------
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

#+BEGIN_EXAMPLE
For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-tree-level-order-traversal][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/binary-tree-level-order-traversal/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution
#+BEGIN_SRC python
## https://code.dennyzhang.com/binary-tree-level-order-traversal
## Basic Ideas: bfs
##
## Complexity: Time O(n), Space O(w)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        if not root: return []
        q = collections.deque([root])
        res = []
        while len(q) > 0:
            levels = []
            for i in range(len(q)):
                node = q.popleft()
                levels.append(node.val)
                if node.left:
                    q.append(node.left)
                if node.right:
                    q.append(node.right)
            res.append(levels)
        return res
#+END_SRC

- Solution
#+BEGIN_SRC go
// https://code.dennyzhang.com/binary-tree-level-order-traversal
// Basic Ideas: BFS
//
// Complexity: Time O(n), Space O(h)
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func levelOrder(root *TreeNode) [][]int {
    res := [][]int{}
    if root == nil { return res }
    queue := []*TreeNode{root}
    for len(queue) != 0 {
        nodes := []*TreeNode{}
        l := []int{}
        for _, node := range queue {
            l = append(l, node.Val)
            if node.Left != nil {
                nodes = append(nodes, node.Left)
            }
            if node.Right != nil {
                nodes = append(nodes, node.Right)
            }
        }
        res = append(res, l)
        queue = nodes
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
