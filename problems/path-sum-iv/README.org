* Leetcode: Path Sum IV                                         :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     pathsum, binarytree
:END:
---------------------------------------------------------------------
Path Sum IV
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/path-sum-iv"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/path-sum-iii][Path Sum III]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-recursive][#recursive]], [[https://code.dennyzhang.com/followup-pathsum][#pathsum]], [[https://code.dennyzhang.com/tag/binarytree][#binarytree]]
---------------------------------------------------------------------

If the depth of a tree is smaller than 5, then this tree can be represented by a list of three-digits integers.

For each integer in this list:
1. The hundreds digit represents the depth D of this node, 1 <= D <= 4.
- The tens digit represents the position P of this node in the level it belongs to, 1 <= P <= 8. The position is the same as that in a full binary tree.
- The units digit represents the value V of this node, 0 <= V <= 9.

Given a list of ascending three-digits integers representing a binary with the depth smaller than 5. You need to return the sum of all paths from the root towards the leaves.

Example 1:
#+BEGIN_EXAMPLE
Input: [113, 215, 221]
Output: 12
Explanation: 
The tree that the list represents is:
    3
   / \
  5   1

The path sum is (3 + 5) + (3 + 1) = 12.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [113, 221]
Output: 4
Explanation: 
The tree that the list represents is: 
    3
     \
      1

The path sum is (3 + 1) = 4.
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/path-sum-iv][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/path-sum-iv/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: bfs

#+BEGIN_SRC go
// https://code.dennyzhang.com/path-sum-iv
// Baisc Ideas: BFS
//
// map: index -> value
// From level i+1 to level i, it's simply (index+1)/2
//
// Interesting question: when we do bfs, how we know whether one node is a leaf?
//
// Complexity: Time O(n), Space O(n)
func pathSum(nums []int) int {
    if len(nums) == 0 { return 0 }
    
    res := 0
    m := map[int]int{1:nums[0]%10}
    i, level := 1, 1
    index, node := 0, 0
    for len(m) != 0{
        level++
        m2 := map[int]int{}
        for i<len(nums) && nums[i]<(level+1)*100 {
            index = (nums[i]%100)/10
            node = m[(index+1)/2]
            m2[index] = node+nums[i]%10
            i++
        }
        for key := range m {
            _, status1 := m2[key*2-1]
            _, status2 := m2[key*2]
            // collect leaf nodes at the current layer
            if status1 == false && status2 == false {
                res += m[key]
            }
        }
        m = m2
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
