* Leetcode: Predict the Winner                                   :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     game, inspiring, minmax
:END:
---------------------------------------------------------------------
Predict the Winner
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/predict-the-winner"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/stone-game][Leetcode: Stone Game]]
- [[https://code.dennyzhang.com/target-sum][Target Sum]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-inspiring][#inspiring]], [[https://code.dennyzhang.com/review-game][#game]], [[https://code.dennyzhang.com/review-minmax][#minmax]]
---------------------------------------------------------------------
Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins.

Given an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score.

Example 1:
#+BEGIN_EXAMPLE
Input: [1, 5, 2]
Output: False
Explanation: Initially, player 1 can choose between 1 and 2. 
If he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). 
So, final score of player 1 is 1 + 2 = 3, and player 2 is 5. 
Hence, player 1 will never be the winner and you need to return False.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [1, 5, 233, 7]
Output: True
Explanation: Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.
Finally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.
#+END_EXAMPLE

Note:
1. 1 <= length of the array <= 20.
- Any scores in the given array are non-negative integers and will not exceed 10,000,000.
- If the scores of both players are equal, then player 1 is still the winner.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/predict-the-winner][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/predict-the-winner/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC go
// https://code.dennyzhang.com/predict-the-winner
// Basic Ideas: Dynamic Programming
//
// f(i, j): max value we can get, if we start with [i, j]
//     if we choose i, we get sum[i:j]-f(i+1, j)
//     if we choose j, we get sum[i:j]-f(i, j-1)
//
// Complexity: Time O(n^2), Space O(n^2)
func PredictTheWinner(nums []int) bool {
    sums := make([]int, len(nums))
    sum := 0
    for i, num := range nums {
        sum += num
        sums[i] = sum
    }
    dp := make([][]int, len(nums))
    for i, _ := range dp { dp[i] = make([]int, len(nums))}
    // from bottom to up
    for i:=len(nums)-1; i>=0; i-- {
        // from left to right
        for j:=i; j<len(nums); j++ {
            if i==j {
                // base case
                dp[i][j] = nums[i]
                continue
            }
            // choose from [i: j]
            v1, v2 := 0, 0
            sum = sums[j]-sums[i]+nums[i]
            v1 = sum - dp[i+1][j]
            v2 = sum - dp[i][j-1]
            if v1>v2 {
                dp[i][j] = v1
            } else {
                dp[i][j] = v2
            }
        }
    }
    return dp[0][len(nums)-1]*2>=sums[len(nums)-1]
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
