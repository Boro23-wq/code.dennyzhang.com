* Leetcode: Data Segmentation                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     classic, redo
:END:
---------------------------------------------------------------------
Data Segmentation
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/classic][#classic]]
---------------------------------------------------------------------
Given a string str, we need to extract the symbols and words of the string in order.

 Notice
- The length of str does not exceed 10000.
- The given str contains only lowercase letters, symbols, and spaces.

Example
#+BEGIN_EXAMPLE
Given str = "(hi (i am)bye)",return ["(","hi","(","i","am",")","bye",")"].

Explanation:
Separate symbols and words.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Given str = "#ok yes",return ["#","ok","yes"]

Explanation:
Separate symbols and words.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Given str = "##s",return ["#","#","s"]

Explanation:
Separate symbols and words.
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/data-segmentation][code.dennyzhang.com]]

Credits To: [[http://lintcode.com/en/problem/data-segmentation/][lintcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/data-segmentation
## Basic Ideas: seperate string
## Complexity: Time O(n), Space O(1)
class Solution:
    """
    @param str: The input string
    @return: The answer
    """
    def dataSegmentation(self, str):
        res = []
        word = ""
        for i, ch in enumerate(str):
            if ch.isalpha():
                word += ch
            else:
                # add caching
                if word != "":
                    res.append(word)
                    word = ""
                # add current
                if ch != " ": res.append(ch)
            
            # add the last
            if i == len(str)-1:
                if word != "":
                    res.append(word)
        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
