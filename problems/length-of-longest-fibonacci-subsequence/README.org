* Leetcode: Length of Longest Fibonacci Subsequence              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, fibonacci, evaluatecomplexity
:END:
---------------------------------------------------------------------
Length of Longest Fibonacci Subsequence
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/length-of-longest-fibonacci-subsequence"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/split-array-into-fibonacci-sequence][Leetcode: Split Array into Fibonacci Sequence]]
- Tag: [[https://code.dennyzhang.com/tag/dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/tag/fibonacci][#fibonacci]], [[https://code.dennyzhang.com/tag/evaluatecomplexity][#evaluatecomplexity]]
---------------------------------------------------------------------
A sequence X_1, X_2, ..., X_n is fibonacci-like if:

n >= 3
X_i + X_{i+1} = X_{i+2} for all i + 2 <= n
Given a strictly increasing array A of positive integers forming a sequence, find the length of the longest fibonacci-like subsequence of A.  If one does not exist, return 0.

(Recall that a subsequence is derived from another sequence A by deleting any number of elements (including none) from A, without changing the order of the remaining elements.  For example, [3, 5, 8] is a subsequence of [3, 4, 5, 6, 7, 8].)
 
Example 1:
#+BEGIN_EXAMPLE
Input: [1,2,3,4,5,6,7,8]
Output: 5
Explanation:
The longest subsequence that is fibonacci-like: [1,2,3,5,8].
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [1,3,7,11,12,14,18]
Output: 3
Explanation:
The longest subsequence that is fibonacci-like:
[1,11,12], [3,11,14] or [7,11,18].
#+END_EXAMPLE
 
Note:

- 3 <= A.length <= 1000
- 1 <= A[0] < A[1] < ... < A[A.length - 1] <= 10^9

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/length-of-longest-fibonacci-subsequence][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: hasmap

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/length-of-longest-fibonacci-subsequence
// Basic Ideas: hashmap
// Complexity: Time O(n*n*log(n)), Space O(n)
//     Why the time complexity is not O(n^3)? 
//     After choosing two pilots, we almost double the value each time.
func lenLongestFibSubseq(A []int) int {
    m := map[int]bool{}
    for _, num := range A { m[num] = true }
    res := 0
    for i:=0; i<len(A)-2; i++ {
        for j:=i+1; j<len(A)-1; j++ {
            prev, cur := A[i], A[j]
            count, next := 2, prev+cur
            for m[next] {
                prev, cur = cur, next
                next = prev+cur
                count++
            }
            if count>res { res = count }
        }
    }
    if res>=3 { 
        return res
    } else {
        return 0
    }
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
