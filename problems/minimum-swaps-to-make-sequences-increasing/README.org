* Leetcode: Minimum Swaps To Make Sequences Increasing           :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, inspiring
:END:
---------------------------------------------------------------------
Minimum Swaps To Make Sequences Increasing
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/review-dynamicprogramming][Review: Dynamic Programming Problems]]
- Tag: [[https://code.dennyzhang.com/tag/dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/tag/inspiring][#inspiring]]
---------------------------------------------------------------------
We have two integer sequences A and B of the same non-zero length.

We are allowed to swap elements A[i] and B[i]. Note that both elements are in the same index position in their respective sequences.

At the end of some number of swaps, A and B are both strictly increasing. 
#+BEGIN_EXAMPLE
(A sequence is strictly increasing if and only if A[0] < A[1] < A[2] < ... < A[A.length - 1].)
#+END_EXAMPLE

Given A and B, return the minimum number of swaps to make both sequences strictly increasing.  It is guaranteed that the given input always makes it possible.

Example:
#+BEGIN_EXAMPLE
Input: A = [1,3,5,4], B = [1,2,3,7]
Output: 1
Explanation: 
Swap A[3] and B[3].  Then the sequences are:
A = [1, 3, 5, 7] and B = [1, 2, 3, 4]
which are both strictly increasing.
#+END_EXAMPLE

Note:

- A, B are arrays with the same length, and that length will be in the range [1, 1000].
- A[i], B[i] are integer values in the range [0, 2000].

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/minimum-swaps-to-make-sequences-increasing][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/minimum-swaps-to-make-sequences-increasing
## Basic Ideas: dynamic programming
##
##    If examining two adjacent columns, there are only 2 combinations!
##     
##    dp[i][2]: swap or don't swap current item
##
## Complexity: Time O(n), Space O(n)
class Solution:
    def minSwap(self, A, B):
        """
        :type A: List[int]
        :type B: List[int]
        :rtype: int
        """
        import sys
        length = len(A)
        dp = [[sys.maxsize, sys.maxsize] for i in range(length)]
        dp[0] = [0, 1]
        for i in range(1, length):
            # case1: don't swap
            if A[i]>A[i-1] and B[i]>B[i-1]:
                dp[i][0] = min(dp[i][0], dp[i-1][0])
                dp[i][1] = min(dp[i][1], dp[i-1][1] + 1)

            # case2: swap
            if A[i]>B[i-1] and B[i]>A[i-1]:
                dp[i][0] = min(dp[i][0], dp[i-1][1])
                dp[i][1] = min(dp[i][1], dp[i-1][0] + 1) 
        return min(dp[-1][0], dp[-1][1])
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
