* Leetcode: Backspace String Compare                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string
:END:
---------------------------------------------------------------------
Backspace String Compare
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/backspace-string-compare"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-string][#string]]
---------------------------------------------------------------------
Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Example 1:
#+BEGIN_EXAMPLE
Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: S = "ab##", T = "c#d#"
Output: true
Explanation: Both S and T become "".
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: S = "a##c", T = "#a#c"
Output: true
Explanation: Both S and T become "c".
#+END_EXAMPLE

Example 4:
#+BEGIN_EXAMPLE
Input: S = "a#c", T = "b"
Output: false
Explanation: S becomes "c" while T becomes "b".
#+END_EXAMPLE
 
Note:

1. 1 <= S.length <= 200
- 1 <= T.length <= 200
- S and T only contain lowercase letters and '#' characters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/backspace-string-compare][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/backspace-string-compare/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: Time O(n), Space O(n)

#+BEGIN_SRC go
// https://code.dennyzhang.com/backspace-string-compare
// Basic Ideas:
// Complexity: Time O(n), Space O(n)
func getString(S string) string {
    ret := []string{}
    for _, ch := range S {
        if ch != '#' {
            ret = append(ret, string(ch))
        } else {
            if len(ret) != 0 { ret = ret[0:len(ret)-1] }
        }
    }
    return strings.Join(ret, "")
}

func backspaceCompare(S string, T string) bool {
    return getString(S) == getString(T)
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
