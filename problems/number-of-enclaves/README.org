* Leetcode: Number of Enclaves                                   :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     island
:END:
---------------------------------------------------------------------
Number of Enclaves
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/number-of-enclaves"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/tag/island][#island]]
---------------------------------------------------------------------
Given a 2D array A, each cell is 0 (representing sea) or 1 (representing land)

A move consists of walking from one land square 4-directionally to another land square, or off the boundary of the grid.

Return the number of land squares in the grid for which we cannot walk off the boundary of the grid in any number of moves.

Example 1:
#+BEGIN_EXAMPLE
Input: [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]
Output: 3
Explanation: 
There are three 1s that are enclosed by 0s, and one 1 that isn't enclosed because its on the boundary.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]
Output: 0
Explanation: 
All 1s are either on the boundary or can reach the boundary.
#+END_EXAMPLE
 
Note:

1. 1 <= A.length <= 500
- 1 <= A[i].length <= 500
- 0 <= A[i][j] <= 1
- All rows have the same size.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/number-of-enclaves][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/number-of-enclaves/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/number-of-enclaves
// Basic Ideas: dfs
// Complexity: Time O(n), Space O(1)
func dfs(A [][]int, i int, j int, count *int) bool {
    rowCnt, colCnt := len(A), len(A[0])
    if i<0 || i>=rowCnt || j<0 || j>=colCnt {
        return false
    }
    if A[i][j] != 1 { return true }
    *count++
    A[i][j] = 2
    res := true
    if !dfs(A, i+1, j, count) { res = false }
    if !dfs(A, i-1, j, count) { res = false }
    if !dfs(A, i, j-1, count) { res = false }
    if !dfs(A, i, j+1, count) { res = false }
    return res
}

func numEnclaves(A [][]int) int {
    res := 0
    rowCnt, colCnt := len(A), len(A[0])
    for i:=0; i<rowCnt; i++ {
        for j:=0; j<colCnt; j++ {
            if A[i][j] == 1 {
                count := 0
                if dfs(A, i, j, &count) {
                    res += count
                }
            }
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
