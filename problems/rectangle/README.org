* LintCode: Rectangle                                           :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     rectangle
:END:
---------------------------------------------------------------------
Rectangle
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/rectangle"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/review-rectangle][Review: Rectangle Problems]], Tag: [[https://code.dennyzhang.com/tag/rectangle][#rectangle]]
---------------------------------------------------------------------
Give a set, if you can find four points that make up a rectangle that is parallel to the coordinate axis and outputs YES or NO.

Notice
The number of points in the set is less than 2000, and the coordinate range is [-10000000,10000000].

Example
#+BEGIN_EXAMPLE
Given set = [[0,0],[0,1],[1,1],[1,0]], return YES.

Explanation:
We can find four points that make up a rectangle which is parallel to the coordinate axis.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Given set = [[0,0],[0,1],[1,1],[2,0]], return NO.

Explanation:
We can not find four points that meet the conditions
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/rectangle][code.dennyzhang.com]]

Credits To: [[http://www.lintcode.com/en/problem/rectangle/][LintCode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/rectangle
#!/usr/bin/env python
"""
class Point:
    def __init__( self, x=0, y=0):
       	self.x = x
       	self.y = y
"""
class Solution:
    """
    @param pointSet: The point set
    @return: The answer
    """
    def rectangle(self, pointSet):
        ## Basic Ideas:
        ##   a, b, c
        ##   a*a+b*b=c*c
        ## Complexity: Time O(1), Space O(1)
        if len(pointSet) != 4: return 'NO'
        l = []
        for i in range(4):
            for j in range(4):
                if i == j: continue
                l.append(pow(pointSet[i].x-pointSet[j].x, 2)+pow(pointSet[i].y-pointSet[j].y, 2))
        mySet = set(l)
        count = len(mySet)
        # print(mySet)
        if count!=2 and count!=3: return 'NO'
        v1, v2 = min(mySet), max(mySet)
        c1, c2 = 0, 0
        for num in l:
            if num == v1: c1 += 1
            if num == v2: c2 += 1
        if len(l)%4 != 0 or c1%4 != 0 or c2%4 != 0: return 'NO'
        if count == 2:
            return 'YES' if v2 == 2*v1 else 'NO'
        else:
            v3 = None
            for num in mySet:
                if num != v1 and num !=v2: v3 = num
            return 'YES' if v2 == v1+v3 else 'NO'
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
