* Leetcode: Sort Characters By Frequency                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     heap
:END:
---------------------------------------------------------------------
Sort Characters By Frequency
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/review-heap][Review: Heap Problems]], [[https://code.dennyzhang.com/tag/heap][Tag: #heap]]
- Tag: [[https://code.dennyzhang.com/tag/heap][heap]]
---------------------------------------------------------------------
Given a string, sort it in decreasing order based on the frequency of characters.

Example 1:
#+BEGIN_EXAMPLE
Input:
"tree"

Output:
"eert"

Explanation:
'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input:
"cccaaa"

Output:
"cccaaa"

Explanation:
Both 'c' and 'a' appear three times, so "aaaccc" is also a valid answer.
Note that "cacaca" is incorrect, as the same characters must be together.
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input:
"Aabb"

Output:
"bbAa"

Explanation:
"bbaA" is also a valid answer, but "Aabb" is incorrect.
Note that 'A' and 'a' are treated as two different characters.
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/sort-characters-by-frequency][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/sort-characters-by-frequency/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/sort-characters-by-frequency
## Baisc Ideas: Sort with customized function
##
## Complexity:
import collections
class Solution(object):
    def frequencySort(self, s):
        """
        :type s: str
        :rtype: str
        """
        m = collections.defaultdict(lambda: 0)
        for ch in s: m[ch] += 1
        def myCompare(v1, v2):
            if m[v1] > m[v2]: return -1
            elif m[v1] < m[v2]: return 1
            else:
                if v1 == v2: return 0
                return -1 if v1 < v2 else 1
        return ''.join(sorted(s, cmp=myCompare))

# s = Solution()
# print s.frequencySort("Aabb") # "bbAa"
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="http://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
