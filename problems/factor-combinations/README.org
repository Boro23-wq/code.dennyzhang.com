* Leetcode: Factor Combinations                                  :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     recursive, backtracking
:END:
---------------------------------------------------------------------
Factor Combinations
---------------------------------------------------------------------
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/backtracking][#backtracking]], [[https://code.dennyzhang.com/tag/recursive][#recursive]]
---------------------------------------------------------------------
Numbers can be regarded as product of its factors. For example,
#+BEGIN_EXAMPLE
8 = 2 x 2 x 2;
  = 2 x 4.
#+END_EXAMPLE

Write a function that takes an integer n and return all possible combinations of its factors.

Note:

1. You may assume that n is always positive.
- Factors should be greater than 1 and less than n.

Example 1:
#+BEGIN_EXAMPLE
Input: 1
Output: []
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: 37
Output:[]
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: 12
Output:
[
  [2, 6],
  [2, 2, 3],
  [3, 4]
]
#+END_EXAMPLE

Example 4:
#+BEGIN_EXAMPLE
Input: 32
Output:
[
  [2, 16],
  [2, 2, 8],
  [2, 2, 2, 4],
  [2, 2, 2, 2, 2],
  [2, 4, 4],
  [4, 8]
]
#+END_EXAMPLE

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/factor-combinations][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/factor-combinations/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: XXX

*General Thinkings:*
#+BEGIN_EXAMPLE

#+END_EXAMPLE

*Key Observations:*
#+BEGIN_EXAMPLE

#+END_EXAMPLE

*Walk Through Testdata*
#+BEGIN_EXAMPLE

#+END_EXAMPLE

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/factor-combinations

#+END_SRC
