* Leetcode: X of a Kind in a Deck of Cards                       :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     hashmap, gcd
:END:
---------------------------------------------------------------------
X of a Kind in a Deck of Cards
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/x-of-a-kind-in-a-deck-of-cards"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-hashmap][#hashmap]], [[https://code.dennyzhang.com/review-gcd][#gcd]]
---------------------------------------------------------------------
In a deck of cards, each card has an integer written on it.

Return true if and only if you can choose X >= 2 such that it is possible to split the entire deck into 1 or more groups of cards, where:

Each group has exactly X cards.
All the cards in each group have the same integer.

Example 1:

#+BEGIN_EXAMPLE
Input: [1,2,3,4,4,3,2,1]
Output: true
Explanation: Possible partition [1,1],[2,2],[3,3],[4,4]
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [1,1,1,2,2,2,3,3]
Output: false
Explanation: No possible partition.
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: [1]
Output: false
Explanation: No possible partition.
#+END_EXAMPLE

Example 4:
#+BEGIN_EXAMPLE
Input: [1,1]
Output: true
Explanation: Possible partition [1,1]
#+END_EXAMPLE

Example 5:
#+BEGIN_EXAMPLE
Input: [1,1,2,2,2,2]
Output: true
Explanation: Possible partition [1,1],[2,2],[2,2]
#+END_EXAMPLE

Note:

1. 1 <= deck.length <= 10000
- 0 <= deck[i] < 10000

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/x-of-a-kind-in-a-deck-of-cards][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: hashmap

#+BEGIN_SRC go
// https://code.dennyzhang.com/x-of-a-kind-in-a-deck-of-cards
// Basic Ideas: hashmap
// Complexity: Time O(n), Space O(n)
func gcd(x int, y int) int {
    if x == 0 { return y }
    for y!=0 {
        x, y = y, x%y
    }
    return x
}

func hasGroupsSizeX(deck []int) bool {
    m := map[int]int{}
    mincnt := 10000
    for _, d := range deck { m[d]++ }
    for _,v := range m {
        if v < mincnt { mincnt = v }
    }
    if mincnt == 1 { return false }
    for _,v:= range m {
        if gcd(v, mincnt) == 1 { return false }
    }
    return true
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
