* Leetcode: Remove All Adjacent Duplicates in String II         :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     stack
:End:
---------------------------------------------------------------------
Remove All Adjacent Duplicates in String II
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-all-adjacent-duplicates-in-string-ii"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- [[https://code.dennyzhang.com/remove-all-adjacent-duplicates-in-string][Leetcode: Remove All Adjacent Duplicates In String]]
- Tag: [[https://code.dennyzhang.com/review-stack][#stack]]
---------------------------------------------------------------------
Given a string s, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them causing the left and the right side of the deleted substring to concatenate together.

We repeatedly make k duplicate removals on s until we no longer can.

Return the final string after all such duplicate removals have been made.

It is guaranteed that the answer is unique.

Example 1:
#+BEGIN_EXAMPLE
Input: s = "abcd", k = 2
Output: "abcd"
Explanation: There's nothing to delete.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: s = "deeedbbcccbdaa", k = 3
Output: "aa"
Explanation: 
First delete "eee" and "ccc", get "ddbbbdaa"
Then delete "bbb", get "dddaa"
Finally delete "ddd", get "aa"
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: s = "pbbcggttciiippooaais", k = 2
Output: "ps"
#+END_EXAMPLE
 
Constraints:

- 1 <= s.length <= 10^5
- 2 <= k <= 10^4
- s only contains lower case English letters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-all-adjacent-duplicates-in-string-ii][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/remove-all-adjacent-duplicates-in-string-ii
// Basic Ideas: stack
//
// Complexity: Time O(n), Space O(n)
type MyNode struct {
    ch byte
    cnt int
}

func removeDuplicates(s string, k int) string {
    stack := []MyNode{}
    for i, _ := range s {
        ch := s[i]
        if len(stack)>0 && stack[len(stack)-1].ch == ch {
            stack[len(stack)-1].cnt += 1
            if stack[len(stack)-1].cnt == k {
                stack = stack[0:len(stack)-1]
            }
        } else {
            stack = append(stack, MyNode{ch:ch, cnt:1})
        }
    }
    l := []byte{}
    for _, node := range stack {
        for i:=0; i<node.cnt; i++ {
            l = append(l, node.ch)
        }
    }
    return string(l)
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
