* Leetcode: Range Sum Query - Immutable                                   :BLOG:Amusing:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     oodesign, presum, rangesum
:END:
---------------------------------------------------------------------
Range Sum Query - Immutable
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/range-sum-query-immutable"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-oodesign][#oodesign]], [[https://code.dennyzhang.com/followup-presum][#presum]], [[https://code.dennyzhang.com/followup-rangesum][#rangesum]]
---------------------------------------------------------------------
Given an integer array nums, find the sum of the elements between indices i and j (i <= j), inclusive.
#+BEGIN_EXAMPLE
Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
#+END_EXAMPLE

Note:
- You may assume that the array does not change.
- There are many calls to sumRange function.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/range-sum-query-immutable][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/range-sum-query-immutable/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC go
// https://code.dennyzhang.com/range-sum-query-immutable
// Basic Ideas: presum
// Complexity: Time O(n), Space O(n)
type NumArray struct {
    l []int
}

func Constructor(nums []int) NumArray {
    //  add a dummy node to caculate nums[0...i]
    l := make([]int, len(nums)+1)
    for i, v := range nums{
        l[i+1] = l[i] + v
    }
    return NumArray{l:l}
}


func (this *NumArray) SumRange(i int, j int) int {
    return this.l[j+1]-this.l[i]
}

/**
 * Your NumArray object will be instantiated and called as such:
 * obj := Constructor(nums);
 * param_1 := obj.SumRange(i,j);
 */
#+END_SRC

#+BEGIN_SRC python
## https://code.dennyzhang.com/range-sum-query-immutable
class NumArray(object):

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        length = len(nums)
        self._nums = nums
        self._sum = [0] * length
        sum_value = 0
        for i in range(0, length):
            sum_value += nums[i]
            self._sum[i] = sum_value

    def sumRange(self, i, j):
        """
        :type i: int
        :type j: int
        :rtype: int
        """
        return self._sum[j] - (self._sum[i-1] if i>0 else 0)
# Your NumArray object will be instantiated and called as such:
# obj = NumArray(nums)
# param_1 = obj.sumRange(i,j)
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
