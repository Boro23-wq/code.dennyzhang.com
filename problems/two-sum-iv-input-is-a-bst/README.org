* Leetcode: Two Sum IV - Input is a BST                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     twopointer, twosum, redo
:END:
---------------------------------------------------------------------
Two Sum IV - Input is a BST
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/tag/twosum][Tag: #twosum]]
- [[https://code.dennyzhang.com/review-twopointer][Review: TwoPointers Problems]], [[https://code.dennyzhang.com/tag/twopointer][Tag: #twopointer]]
---------------------------------------------------------------------
Given a Binary Search Tree and a target number, return true if there exist two elements in the BST such that their sum is equal to the given target.
#+BEGIN_EXAMPLE
Example 1:
Input: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 9

Output: True
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:
Input: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 28

Output: False
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/two-sum-iv-input-is-a-bst][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/two-sum-iv-input-is-a-bst/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/two-sum-iv-input-is-a-bst
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def findTarget(self, root, k):
        """
        :type root: TreeNode
        :type k: int
        :rtype: bool
        """
        ## Idea: Generate a sorted array from binary search tree.
        ##       Use 2 sum
        ## Complexity: Time O(n), Space O(n)
        nums = self._convertBST2Array(root)
        length = len(nums)
        if length < 2:
            return False

        i, j = 0, length-1
        while i<j:
            sum_value = nums[i] + nums[j]
            if sum_value == k:
                return True
            elif sum_value < k:
                i += 1
            else:
                j -= 1
        return False

    def _convertBST2Array(self, root):
        """
        :type root: TreeNode
        :rtype: list
        """
        if root is None:
            return []
        if root.left is None and root.right is None:
            return [root.val]

        res = []
        if root.left:
            res = self._convertBST2Array(root.left) + res
        res = res + [root.val]
        if root.right:
            res = res + self._convertBST2Array(root.right)
        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
