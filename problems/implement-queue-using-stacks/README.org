* Leetcode: Implement Queue using Stacks                          :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     oodesign
:END:
---------------------------------------------------------------------
Implement Queue using Stacks
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/implement-queue-using-stacks"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-oodesign][#oodesign]]
---------------------------------------------------------------------
Implement the following operations of a queue using stacks.

- push(x) -- Push element x to the back of queue.
- pop() -- Removes the element from in front of queue.
- peek() -- Get the front element.
- empty() -- Return whether the queue is empty.

Notes:
- You must use only standard operations of a stack -- which means only push to top, peek/pop from top, size, and is empty operations are valid.
- Depending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.
- You may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/implement-queue-using-stacks][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/implement-queue-using-stacks/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/implement-queue-using-stacks
class MyQueue(object):

    ## Idea: Use 2 stack. When pop, move to stack1, then stack2
    ## Complexity: Time O(n), Space O(n)
    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.stack1 = []
        self.stack2 = []
        

    def push(self, x):
        """
        Push element x to the back of queue.
        :type x: int
        :rtype: void
        """
        self.stack1.append(x)

    def pop(self):
        """
        Removes the element from in front of queue and returns that element.
        :rtype: int
        """
        ## Complexity: Time O(n), Space: O(n)
        # move elements from stack1 to stack2
        ret = None
        while len(self.stack1) != 0:
            item = self.stack1[-1]
            del self.stack1[-1]
            self.stack2.append(item)
        ret = self.stack2[-1]
        del self.stack2[-1]

        # push back to stack2
        while len(self.stack2) != 0:
            item = self.stack2[-1]
            del self.stack2[-1]
            self.stack1.append(item)
        return ret

    def peek(self):
        """
        Get the front element.
        :rtype: int
        """
        ## Complexity: Time O(n), Space: O(n)
        # move elements from stack1 to stack2
        ret = None
        while len(self.stack1) != 0:
            item = self.stack1[-1]
            del self.stack1[-1]
            self.stack2.append(item)
        ret = self.stack2[-1]

        # push back to stack2
        while len(self.stack2) != 0:
            item = self.stack2[-1]
            del self.stack2[-1]
            self.stack1.append(item)
        return ret

    def empty(self):
        """
        Returns whether the queue is empty.
        :rtype: bool
        """
        return len(self.stack1) == 0


# Your MyQueue object will be instantiated and called as such:
# obj = MyQueue()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.peek()
# param_4 = obj.empty()
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
