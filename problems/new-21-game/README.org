* Leetcode: New 21 Game                                         :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, game, inspiring, possibilities
:END:
---------------------------------------------------------------------
New 21 Game
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/climbing-stairs][Climbing Stairs]]
- Tag: [[https://code.dennyzhang.com/tag/dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/tag/inspiring][#inspiring]], [[https://code.dennyzhang.com/tag/game][#game]], [[https://code.dennyzhang.com/tag/possibilities][#possibilities]]
---------------------------------------------------------------------
Alice plays the following game, loosely based on the card game "21".

Alice starts with 0 points, and draws numbers while she has less than K points.  During each draw, she gains an integer number of points randomly from the range [1, W], where W is an integer.  Each draw is independent and the outcomes have equal probabilities.

Alice stops drawing numbers when she gets K or more points.  What is the probability that she has N or less points?

Example 1:
#+BEGIN_EXAMPLE
Input: N = 10, K = 1, W = 10
Output: 1.00000
Explanation:  Alice gets a single card, then stops.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: N = 6, K = 1, W = 10
Output: 0.60000
Explanation:  Alice gets a single card, then stops.
In 6 out of W = 10 possibilities, she is at or below N = 6 points.
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: N = 21, K = 17, W = 10
Output: 0.73278
#+END_EXAMPLE
Note:

1. 0 <= K <= N <= 10000
- 1 <= W <= 10000
- Answers will be accepted as correct if they are within 10^-5 of the correct answer.
- The judging time limit has been reduced for this question.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/new-21-game][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/new-21-game/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/new-21-game
// Basic Ideas: dynamic programming
// dp(i): The possibility of get i
//
//      O ... O + b
//                b in [1, W]
//
// dp[i] = (dp[i-1]+dp[i-2]+dp[i-3]+... + dp[i-W])/W
//
// result:
//         dp[K]+dp[K+1]+...dp[N]
//
// Complexity: Time O(N), Space O(N)
func new21Game(N int, K int, W int) float64 {
    if (K == 0 || N >= K + W) { return 1.0 }
    dp := make([]float64, N+1)
    dp[0] = 1
    var sum, res float64
    sum, res = 1, 0
    for i:=1; i<=N; i++ {
        dp[i] = sum/float64(W)
        if i<K {
            sum += dp[i]
        } else {
            res += dp[i] 
        }
        if i-W>=0 {
            sum -= dp[i-W]
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
