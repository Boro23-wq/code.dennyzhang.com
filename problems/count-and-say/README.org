* Leetcode: Count and Say                                   :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string, padplaceholder
:END:
---------------------------------------------------------------------
Count and Say
---------------------------------------------------------------------
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/padplaceholder][#padplaceholder]], [[https://code.dennyzhang.com/tag/string][#string]]
---------------------------------------------------------------------
The count-and-say sequence is the sequence of integers with the first five terms as following:

#+BEGIN_EXAMPLE
1.     1
2.     11
3.     21
4.     1211
5.     111221
#+END_EXAMPLE

#+BEGIN_EXAMPLE
1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.
#+END_EXAMPLE
Given an integer n, generate the nth term of the count-and-say sequence.

Note: Each term of the sequence of integers will be represented as a string.
#+BEGIN_EXAMPLE
Example 1:

Input: 1
Output: "1"
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:

Input: 4
Output: "1211"
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/count-and-say][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/count-and-say/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/count-and-say
// Basic Ideas:
//   From n-1 to n
//       1.     1
//       2.     11
//       3.     21
//       4.     1211
//       5.     111221 
//       6.     312211
//       7.     13112221
//       8.     1113213211
//       9.     31131211131221
//      10.     13211311123113112211
// Complexity: Time O(n), Space O(m)
//    m = length of target string
func countAndSay(n int) string {
    if n == 1 { return "1" }
    l := []string{"1"}
    for i:=1; i<n; i++ {
        l2 := []string{}
        count := 1
        l = append(l, " ")
        for i, ch := range l {
            if i == 0 { continue }
            if ch != l[i-1] {
                l2 = append(l2, strconv.Itoa(count))
                l2 = append(l2, l[i-1])
                count = 1
            } else {
                count++
            }
        }
        l = l2
    }
    return strings.Join(l, "")
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="http://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
