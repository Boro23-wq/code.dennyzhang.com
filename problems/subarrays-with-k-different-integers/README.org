* Leetcode: Subarrays with K Different Integers                 :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     slidingwindow, atmostkdistinct
:END:
---------------------------------------------------------------------
Subarrays with K Different Integers
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/subarrays-with-k-different-integers"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-slidingwindow][#slidingwindow]], [[https://code.dennyzhang.com/followup-atmostkdistinct][#atmostkdistinct]]
---------------------------------------------------------------------
Given an array A of positive integers, call a (contiguous, not necessarily distinct) subarray of A good if the number of different integers in that subarray is exactly K.

(For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.)

Return the number of good subarrays of A.

Example 1:
#+BEGIN_EXAMPLE
Input: A = [1,2,1,2,3], K = 2
Output: 7
Explanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: A = [1,2,1,3,4], K = 3
Output: 3
Explanation: Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].
#+END_EXAMPLE

Note:

1. 1 <= A.length <= 20000
- 1 <= A[i] <= A.length
- 1 <= K <= A.length

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/subarrays-with-k-different-integers][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/subarrays-with-k-different-integers/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/subarrays-with-k-different-integers
// Basic Ideas: slidingwindow
//
//    At most K - At most K-1 distinct
//
// Complexity: Time O(n*k), Space O(k)
func atmostKDistinct(A []int, K int) int {
    m := map[int]int{}
    res := 0
    // A[i...j]
    i:=0
    for j, v := range A {
        // move right
        m[v]++
        if m[v] == 1 {
            K--
        }
        // move left
        for K<0 {
            v2 := A[i]
            i++
            m[v2]--
            if m[v2] == 0 {
                K++
            }
        }
        // A[i...j], with j fixed
        res += j-i+1
    }
    return res
}

func subarraysWithKDistinct(A []int, K int) int {
    return atmostKDistinct(A, K) - atmostKDistinct(A, K-1)
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
