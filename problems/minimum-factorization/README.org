* Leetcode: Minimum Factorization                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math, redo
:END:
---------------------------------------------------------------------
Minimum Factorization
---------------------------------------------------------------------
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/math][#math]]
---------------------------------------------------------------------
Given a positive integer a, find the smallest positive integer b whose multiplication of each digit equals to a.

If there is no answer or the answer is not fit in 32-bit signed integer, then return 0.
Example 1
#+BEGIN_EXAMPLE
Input:

48 
Output:
68
#+END_EXAMPLE

Example 2
#+BEGIN_EXAMPLE
Input:

15
Output:
35
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/minimum-factorization][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/minimum-factorization/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/minimum-factorization
// Basic Ideas:
//
// 48 -> [2, 2, 2, 2, 2, 3]
// 15 -> [3, 5]
//
// If n has dividends bigger than 9, it won't work
//
// Now we get all dividends as l[int]. 
// How we can construct the minimum number?
// - smallest digits count
// - smallest digit values
//
// Complexity:
func smallestFactorization(a int) int {
    if a<=1 { return a }
    m := map[int]int{}
    for _, v:=range[]int{2, 3, 5, 7} {
        for a%v == 0 {
            a = int(a/v)
            m[v] += 1
        }
    }
    if a !=1 { return 0 }

    // 2 2 2 -> 8
    if m[2] >= 3 { m[8], m[2] =int(m[2]/3), m[2]%3 }
    // 3 3 -> 9
    if m[3] >=2 { m[9],m[3] = int(m[3]/2), m[3]%2 }
    // 2 3 -> 6
    if m[2]>=1 && m[3]==1 { m[6], m[2], m[3] = 1, m[2]-1, 0 }
    // 2 2 -> 4
    if m[2]==2 { m[2], m[4] = 0, 1 }
    // get the result
    res := 0
    for i:=2; i<10; i++ {
        for m[i] != 0 {
            res = res*10+i
            if res > 2147483647 { return 0 }
            m[i]--
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
