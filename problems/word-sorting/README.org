* LintCode: Word Sorting                                        :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string
:END:
---------------------------------------------------------------------
Word Sorting
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/word-sorting"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/review-string][Review: String Problems]], Tag: [[https://code.dennyzhang.com/tag/string][#string]]
---------------------------------------------------------------------
Give a new alphabet, such as {c,b,a,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z}. Sort the string array according to the new alphabet

Notice
- The length of word does not exceed 100.
- The number of words does not exceed 10000.
- You can assume that the given new alphabet is a 26-character string.
- Only lowercase letters.

Example
Given Alphabet = {c,b,a,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z}, String array = {cab,cba,abc}, return {cba,cab,abc}.

#+BEGIN_EXAMPLE
Explanation:
According to the new dictionary order, output the sorted result {cba, cab, abc}.
#+END_EXAMPLE

Given Alphabet = {z,b,a,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,c}, String array = {bca,czb,za,zba,ade}, return {zba,za,bca,ade,czb}.

#+BEGIN_EXAMPLE
Explanation:
According to the new dictionary order, output the sorted result {zba,za,bca,ade,czb}.
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/word-sorting][code.dennyzhang.com]]

Credits To: [[http://www.lintcode.com/en/problem/word-sorting/][LintCode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/word-sorting
class Solution:
    """
    @param alphabet: the new alphabet
    @param words: the original string array
    @return: the string array after sorting
    """
    def wordSort(self, alphabet, words):
        import collections
        self.d = {}
        v = 0
        for ch in alphabet:
            self.d[ch] = v
            v += 1
        return sorted(words, cmp=self.myCompare)

    def myCompare(self, v1, v2):
        len1, len2 = len(v1), len(v2)
        if len1<len2: return -self.myCompare(v2, v1)
        for i in range(0, len2):
            ch1, ch2 = v1[i], v2[i]
            if self.d[ch1] < self.d[ch2]: return -1
            if self.d[ch1] > self.d[ch2]: return 1
        if len1==len2: return 0
        else: return 1
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
