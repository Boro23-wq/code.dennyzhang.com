* Leetcode: Valid Sudoku                                         :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     manydetails
:END:
---------------------------------------------------------------------
Valid Sudoku
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-sudoku"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/review-manydetails][Review: Problems With Many Details]]
- Tag: [[https://code.dennyzhang.com/tag/manydetails][#manydetails]]
---------------------------------------------------------------------
Determine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.

The Sudoku board could be partially filled, where empty cells are filled with the character '.'.

A partially filled sudoku which is valid.

Note:
A valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-sudoku][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/valid-sudoku/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/valid-sudoku
## Basic Ideas: Check each row, each colum and each section
##              When we check, we use an array of 10
##
## Complexity: Time O(1), Space O(1)
class Solution(object):
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        # check each row
        for i in xrange(9):
            array_check = [False] * 9
            for j in xrange(9):
                ch = board[i][j]
                if ch == '.':
                    continue
                index = int(ch) - 1
                if array_check[index] is True:
                    return False
                else:
                    array_check[index] = True

        # check each column
        for j in xrange(9):
            array_check = [False] * 9
            for i in xrange(9):
                ch = board[i][j]
                if ch == '.':
                    continue
                index = int(ch) - 1
                if array_check[index] is True:
                    return False
                else:
                    array_check[index] = True

        # check each section
        start_node_list = []
        for i in [0, 3, 6]:
            for j in [0, 3, 6]:
                start_node_list.append((i, j))
        for (start_i, start_j) in start_node_list:
            array_check = [False] * 9
            for i in xrange(3):
                for j in xrange(3):
                    ch = board[start_i+i][start_j+j]
                    # print("i:%d, j:%d, ch:%s" % (start_i+i, start_j+j, ch))
                    # print array_check
                    if ch == '.':
                        continue
                    index = int(ch) - 1
                    if array_check[index] is True:
                        return False
                    else:
                        array_check[index] = True    
        return True
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
