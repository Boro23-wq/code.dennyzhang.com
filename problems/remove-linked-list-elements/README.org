* Leetcode: Remove Linked List Elements                          :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     linkedlist
:END:
---------------------------------------------------------------------
Remove Linked List Elements
---------------------------------------------------------------------
Remove all elements from a linked list of integers that have value val.

Example
Given: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6
Return: 1 --> 2 --> 3 --> 4 --> 5

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/remove-linked-list-elements][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/remove-linked-list-elements/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/remove-linked-list-elements
## Basic Ideas: The head might be removed, thus we need a dummy node
## Complexity: Time O(n), Space O(1)
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeElements(self, head, val):
        """
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """
        dummyNode = ListNode(None)
        dummyNode.next = head
        p = dummyNode
        while p.next:
            if p.next.val == val:
                p.next = p.next.next
            else:
                p = p.next
        return dummyNode.next
#+END_SRC
