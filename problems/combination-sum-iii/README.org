* Leetcode: Combination Sum III                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     combination, redo
:END:
---------------------------------------------------------------------
Combination Sum III
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/combination-sum-iii"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/combination-sum][Leetcode: Combination Sum]]
- [[https://code.dennyzhang.com/combination-sum-ii][Leetcode: Combination Sum II]]
- [[https://code.dennyzhang.com/combination-sum-iii][Leetcode: Combination Sum III]]
- [[https://code.dennyzhang.com/combination-sum-iv][Leetcode: Combination Sum IV]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-combination][#combination]]
---------------------------------------------------------------------
Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.

#+BEGIN_EXAMPLE
Example 1:

Input: k = 3, n = 7

Output:

[[1,2,4]]
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:

Input: k = 3, n = 9

Output:

[[1,2,6], [1,3,5], [2,3,4]]
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/combination-sum-iii][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/combination-sum-iii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// https://code.dennyzhang.com/combination-sum-iii
// Basic Ideas: Backtracking
//
// Complexity: Time ?, Space ?
func dfs(combination []int, pos int, cnt int, target int, res *[][]int) {
    if cnt == 0 && target == 0 {
        combination2 := make([]int, len(combination))
        copy(combination2, combination)
        *res = append(*res, combination2)
        return
    }
    if cnt == 0 || target <=0 {
        return 
    }
    for i:=pos; i<9; i++ {
        // add value of i+1
        combination = append(combination, i+1)
        dfs(combination, i+1, cnt-1, target-(i+1), res)
        combination = combination[0:len(combination)-1]
    }
}

func combinationSum3(k int, n int) [][]int {
    res := [][]int{}
    dfs([]int{}, 0, k, n, &res)
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
