* Leetcode: Remove All Adjacent Duplicates In String             :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string, classic
:END:
---------------------------------------------------------------------
Remove All Adjacent Duplicates In String
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-all-adjacent-duplicates-in-string"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/string][#string]], [[https://code.dennyzhang.com/tag/classic][#classic]], [[https://code.dennyzhang.com/tag/stack][#stack]]
---------------------------------------------------------------------
Given a string S of lowercase letters, a duplicate removal consists of choosing two adjacent and equal letters, and removing them.

We repeatedly make duplicate removals on S until we no longer can.

Return the final string after all such duplicate removals have been made.  It is guaranteed the answer is unique.
 
Example 1:
#+BEGIN_EXAMPLE
Input: "abbaca"
Output: "ca"
Explanation: 
For example, in "abbaca" we could remove "bb" since the letters are adjacent and equal, and this is the only possible move.  The result of this move is that the string is "aaca", of which only "aa" is possible, so the final string is "ca".
#+END_EXAMPLE
 
Note:

1. 1 <= S.length <= 20000
- S consists only of English lowercase letters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-all-adjacent-duplicates-in-string][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/remove-all-adjacent-duplicates-in-string
// Basic Ideas: stack
// Complexity: Time O(n), Space O(n)
func removeDuplicates(S string) string {
    stack := []byte{}
    for i:=0; i<len(S); i++ {
        count := len(stack)
        if count == 0 || stack[count-1] != S[i] {
            stack = append(stack, S[i])
        } else {
            stack = stack[0:count-1]
        }
    }
    return string(stack)
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
