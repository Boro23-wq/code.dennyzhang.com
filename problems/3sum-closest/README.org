* Leetcode: 3Sum Closest                                        :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     twopointer, twosum, inspiring
:END:
---------------------------------------------------------------------
3Sum Closest
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/3sum-smaller][3Sum Smaller]]
- [[https://code.dennyzhang.com/tag/twosum][Tag: #twosum]]
- [[https://code.dennyzhang.com/review-twopointer][Review: TwoPointers Problems]], [[https://code.dennyzhang.com/tag/twopointer][Tag: #twopointer]]
---------------------------------------------------------------------
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.
#+BEGIN_EXAMPLE
    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/3sum-closest][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/3sum-closest/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/3sum-closest
## Basic Ideas: two sum
## Complexity: Time O(n*n), Space O(1)
class Solution:
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        import sys
        length = len(nums)
        if length <=2: return sum(nums)
        nums.sort()
        res = sum(nums[0:3])
        for i in range(length-2):
            l, r = i+1, length-1
            while l<r:
                v = nums[i]+nums[l]+nums[r]
                if v == target: return v
                if abs(v-target) < abs(res-target): res = v

                if v > target:
                    # make v smaller
                    r -= 1
                else:
                    l += 1

        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
