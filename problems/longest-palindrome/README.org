* Leetcode: Longest Palindrome                                   :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     palindrome
:END:
---------------------------------------------------------------------
Longest Palindrome
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/review-palindrome][Review: Palindrome Problems]], [[https://code.dennyzhang.com/tag/palindrome][Tag: #palindrome]]
---------------------------------------------------------------------
Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.

This is case sensitive, for example "Aa" is not considered a palindrome here.

Note:
Assume the length of given string will not exceed 1,010.

#+BEGIN_EXAMPLE
Example:

Input:
"abccccdd"

Output:
7

Explanation:
One longest palindrome that can be built is "dccaccd", whose length is 7.
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/longest-palindrome][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/longest-palindrome/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/longest-palindrome
## Basic Ideas:
## Complexity:
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: int
        """
        ## Idea: Use a map and count characters
        ## Complexity:
        count_map = {}
        for ch in s:
            if count_map.has_key(ch) is False:
                count_map[ch] = 1
            else:
                count_map[ch] += 1
        has_odd = False
        res = 0
        for ch in count_map.keys():
            if count_map[ch] % 2 == 0:
                res += count_map[ch]
            else:
                has_odd = True
                res += count_map[ch] - 1
        return res+1 if has_odd else res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="http://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
