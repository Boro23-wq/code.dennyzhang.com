* Leetcode: Remove Invalid Parentheses                           :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     bfs, dfs, inspiring, parentheses, backtracking, redo
:END:
---------------------------------------------------------------------
Remove Invalid Parentheses
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-invalid-parentheses"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/followup-parentheses][#parentheses]], [[https://code.dennyzhang.com/review-bfs][#bfs]], [[https://code.dennyzhang.com/review-dfs][#dfs]], [[https://code.dennyzhang.com/review-backtracking][#backtracking]]
---------------------------------------------------------------------
Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.

Note: The input string may contain letters other than the parentheses ( and ).

Examples:
#+BEGIN_EXAMPLE
"()())()" -> ["()()()", "(())()"]
"(a)())()" -> ["(a)()()", "(a())()"]
")(" -> [""]
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-invalid-parentheses][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/remove-invalid-parentheses/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: backtracking
#+BEGIN_SRC go
// https://code.dennyzhang.com/remove-invalid-parentheses
// Basic Ideas: backtacking
//
// Complexity: Time O(2^n), Space O(w)
func dfs(combination []byte, remainCnt int, leftCnt int, pos int, s string, m map[string]bool) {
    if leftCnt < 0 {
        return
    }
    if pos == len(s) {
        if remainCnt == 0 && leftCnt == 0 {
            m[string(combination)] = true
        }
        return
    }
    ch := s[pos]
    if ch != '(' && ch != ')' {
        combination = append(combination, ch)
        dfs(combination, remainCnt, leftCnt, pos+1, s, m)
    } else {
        // drop
        dfs(combination, remainCnt-1, leftCnt, pos+1, s, m)
        // keep
        combination = append(combination, ch)
        v := leftCnt
        if ch == '(' {
            v++
        } else {
            v--
        }
        dfs(combination, remainCnt, v, pos+1, s, m)
    }
}

func removeInvalidParentheses(s string) []string {
    // how many to be deleted
    stack := []byte{}
    for i, _ := range s {
        ch := s[i]
        if ch != '(' && ch != ')' {
            continue
        }
        if ch == ')' && len(stack) > 0 && stack[len(stack)-1] == '(' {
            stack = stack[0:len(stack)-1]
        } else {
            stack = append(stack, ch)
        }
    }
    res := []string{}
    m := map[string]bool{}
    dfs([]byte{}, len(stack), 0, 0, s, m)
    for s, _ := range m {
        res = append(res, s)
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
