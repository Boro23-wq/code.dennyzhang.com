* Leetcode: Binary String With Substrings Representing 1 To N    :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     bitmanipulation
:END:
---------------------------------------------------------------------
Binary String With Substrings Representing 1 To N
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-string-with-substrings-representing-1-to-n"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-bitmanipulation][#bitmanipulation]]
---------------------------------------------------------------------
Given a binary string S (a string consisting only of '0' and '1's) and a positive integer N, return true if and only if for every integer X from 1 to N, the binary representation of X is a substring of S.
 
Example 1:
#+BEGIN_EXAMPLE
Input: S = "0110", N = 3
Output: true
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: S = "0110", N = 4
Output: false
#+END_EXAMPLE
 
Note:

1. 1 <= S.length <= 1000
- 1 <= N <= 10^9

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-string-with-substrings-representing-1-to-n][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: Brute force with simple pruning

#+BEGIN_SRC go
// https://code.dennyzhang.com/binary-string-with-substrings-representing-1-to-n
// Basic Ideas:
//    0110
//       1, 10, 11, 100
//  Notice: Instead of examining 1 to N, only need to do N, N-1, ... N/2
// Complexity: Time ? Space ?
import "strings"
func getBinStr(n int) string {
    l := []byte{}
    for n != 0 {
        l = append(l, byte('0')+byte(n%2))
        n = n/2
    }
    left, right := 0, len(l)-1
    for left<right {
        l[left],l[right] = l[right],l[left]
        left++
        right--
    }
    return string(l)
}

func queryString(S string, N int) bool {
    for i:=N; i>=N/2; i-- {
        binStr := getBinStr(i)
        if strings.Index(S, binStr) == -1 {
            return false
        }
    }
    return true
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
