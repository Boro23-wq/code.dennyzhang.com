* Leetcode: Shortest Distance to Target Color                   :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     shortestdistance
:END:
---------------------------------------------------------------------
Shortest Distance to Target Color
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-distance-to-target-color"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/followup-shortestdistance][#shortestdistance]]
---------------------------------------------------------------------
You are given an array colors, in which there are three colors: 1, 2 and 3.

You are also given some queries. Each query consists of two integers i and c, return the shortest distance between the given index i and the target color c. If there is no solution return -1.

Example 1:
#+BEGIN_EXAMPLE
Input: colors = [1,1,2,1,3,2,2,3,3], queries = [[1,3],[2,2],[6,1]]
Output: [3,0,3]
Explanation: 
The nearest 3 from index 1 is at index 4 (3 steps away).
The nearest 2 from index 2 is at index 2 itself (0 steps away).
The nearest 1 from index 6 is at index 3 (3 steps away).
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: colors = [1,2], queries = [[0,3]]
Output: [-1]
Explanation: There is no 3 in the array.
#+END_EXAMPLE

Constraints:

- 1 <= colors.length <= 5*10^4
- 1 <= colors[i] <= 3
- 1 <= queries.length <= 5*10^4
- queries[i].length == 2
- 0 <= queries[i][0] < colors.length
- 1 <= queries[i][1] <= 3

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-distance-to-target-color][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/shortest-distance-to-target-color/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/shortest-distance-to-target-color
// Basic Ideas: dynamic programming
//
// Complexity: Time O(n), Space O(n)
func shortestDistanceColor(colors []int, queries [][]int) []int {
    dp := make([][]int, len(colors))
    for i, _ := range dp {
        dp[i] = []int{1<<31-1, 1<<31-1, 1<<31-1}
    }
    // From left to right
    for i:=0; i<len(dp); i++ {
        dp[i][colors[i]-1] = 0
        if i == 0 {
            continue
        }
        for j:=0; j<3; j++ {
            if dp[i-1][j] != 1<<31-1 && dp[i-1][j]+1<dp[i][j] {
                dp[i][j] = dp[i-1][j]+1
            }
        }
    }
    // From right to left
    for i:=len(dp)-1; i>=0; i-- {
        dp[i][colors[i]-1] = 0
        if i == len(dp)-1 {
            continue
        }
        for j:=0; j<3; j++ {
            if dp[i+1][j] != 1<<31-1 && dp[i+1][j]+1<dp[i][j] {
                dp[i][j] = dp[i+1][j]+1
            }
        }
    }
    res := make([]int, len(queries))
    for i, query := range queries {
        res[i] = dp[query[0]][query[1]-1]
        if res[i] == 1<<31-1 {
            res[i] = -1
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
