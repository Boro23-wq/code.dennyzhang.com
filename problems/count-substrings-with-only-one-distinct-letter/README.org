* Leetcode: Count Substrings with Only One Distinct Letter      :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     slidingwindow, atmostkdistinct
:END:
---------------------------------------------------------------------
Count Substrings with Only One Distinct Letter
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/count-substrings-with-only-one-distinct-letter"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-slidingwindow][#slidingwindow]], [[https://code.dennyzhang.com/followup-atmostkdistinct][#atmostkdistinct]]
---------------------------------------------------------------------
Given a string S, return the number of substrings that have only one distinct letter.

Example 1:
#+BEGIN_EXAMPLE
Input: S = "aaaba"
Output: 8
Explanation: The substrings with one distinct letter are "aaa", "aa", "a", "b".
"aaa" occurs 1 time.
"aa" occurs 2 times.
"a" occurs 4 times.
"b" occurs 1 time.
So the answer is 1 + 2 + 4 + 1 = 8.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: S = "aaaaaaaaaa"
Output: 55
#+END_EXAMPLE
 
Constraints:

- 1 <= S.length <= 1000
- S[i] consists of only lowercase English letters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/count-substrings-with-only-one-distinct-letter][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/count-substrings-with-only-one-distinct-letter/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/count-substrings-with-only-one-distinct-letter
// Basic Ideas: sliding windwow
//  S[i...j], loop right pointer(j) one by one
//
// Complexity: Time O(n), Space O(1)
func countLetters(S string) int {
    res := 0
    i, j:=0, 0
    // S[i...j]
    for i<=j && j<len(S) {
        // start a new segment
        if S[j] != S[i] {
            i=j
            continue
        }
        res += j-i+1
        j++
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
