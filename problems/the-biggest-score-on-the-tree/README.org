* LintCode: The Biggest Score On The Tree                       :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     binarytree
:END:
---------------------------------------------------------------------
The Biggest Score On The Tree
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/the-biggest-score-on-the-tree"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- Tag: [[https://code.dennyzhang.com/category/binarytree][#binarytree]]
---------------------------------------------------------------------
Given a multitree of n nodes, and the node numbered from 0 to n - 1, and the root numbered 0. Each node has a revenue, you can add the revenue of this node when you get to it. Each side has a cost, we will subtract the cost of this side when walking along it. Find the maximum total (total score = total return - total cost) score from the root node to any leaf node.

 Notice
- x[i], y[i] represent two nodes on the ith edge, cost[i] represent the cost of ith edge, profit[i] represent the revenue of node
numbered i.
- 1 <= x[i], y[i] <= 10^5
- 1 <= cost[i], profit[i] <= 100

Example
#+BEGIN_EXAMPLE
Given x = [0,0,0],y = [1,2,3], cost = [1,1,1], profit = [1,1,2,3],return 3.

Route: 0->3
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Given x = [0,0],y = [1,2], cost =[1,2], profit = [1,2,5],return 4.

Route: 0->2
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/the-biggest-score-on-the-tree][code.dennyzhang.com]]

Credits To: [[http://www.lintcode.com/en/problem/the-biggest-score-on-the-tree/][lintcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/the-biggest-score-on-the-tree
class MyTree:
    def __init__(self, profit):
        self.profit = profit
        self.children = []

class Solution:
    """
    @param x: The vertex of edge
    @param y: The another vertex of edge
    @param cost: The cost of edge
    @param profit: The profit of vertex
    @return: Return the max score
    """
    def getMaxScore(self, x, y, cost, profit):
        ## Basic Ideas:
        ##
        ##  Is there a loop? Graph, instead of tree
        ##
        ## Complexity:
        import collections
        nodes = []
        d = {}
        for p in profit: nodes.append(MyTree(p))

        for i in range(len(x)):
            nodes[x[i]].children.append(y[i])
            d[(x[i], y[i])] = cost[i]
        queue = collections.deque()
        queue.append((0, nodes[0].profit))
        max_profit = -1
        while len(queue) != 0:
            for k in range(len(queue)):
                (i, profit) = queue.popleft()
                if len(nodes[i].children) == 0:
                    max_profit = max(max_profit, profit)
                else:
                    for j in nodes[i].children:
                        queue.append((j, profit+nodes[j].profit-d[(i, j)]))
        return max_profit
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
