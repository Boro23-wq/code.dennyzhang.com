* Leetcode: Find Duplicate Subtrees                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     classic, inspiring, binarytree, hashmap, postorder
:END:
---------------------------------------------------------------------
Find Duplicate Subtrees
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/find-duplicate-subtrees"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/brick-wall][Leetcode: Brick Wall]]
- Tag: [[https://code.dennyzhang.com/tag/classic][#classic]], [[https://code.dennyzhang.com/tag/inspiring][#inspiring]], [[https://code.dennyzhang.com/tag/binarytree][#binarytree]], [[https://code.dennyzhang.com/tag/hashmap][#hashmap]], [[https://code.dennyzhang.com/tag/postorder][#postorder]]
---------------------------------------------------------------------
Given a binary tree, return all duplicate subtrees. For each kind of duplicate subtrees, you only need to return the root node of any one of them.

Two trees are duplicate if they have the same structure with same node values.

Example 1: 
#+BEGIN_EXAMPLE
        1
       / \
      2   3
     /   / \
    4   2   4
       /
      4
#+END_EXAMPLE

The following are two duplicate subtrees:
#+BEGIN_EXAMPLE
      2
     /
    4
#+END_EXAMPLE
and
#+BEGIN_EXAMPLE
    4
#+END_EXAMPLE

Therefore, you need to return above trees' root in the form of a list.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/find-duplicate-subtrees][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/find-duplicate-subtrees/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/find-duplicate-subtrees
// Basic Ideas: hashmap
// Encode binarytree to string
// Complexity: Time O(n), Space O(n)
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func findDuplicateSubtrees(root *TreeNode) []*TreeNode {
    m := map[string]int{}
    res := []*TreeNode{}
    postTree(root, m, &res)
    return res
}

func postTree(root *TreeNode, m map[string]int, res *[]*TreeNode) string {
    if root == nil { return "#" }
    l, r := postTree(root.Left, m, res), postTree(root.Right, m, res)
    v := fmt.Sprintf("%s,%s,%d", l, r, root.Val)
    if m[v] == 1 { *res = append(*res, root) }
    m[v]++
    return v
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
