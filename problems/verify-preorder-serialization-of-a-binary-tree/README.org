* Leetcode: Verify Preorder Serialization of a Binary Tree       :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     redo, stack, manydetails, codetemplate, serialize
:END:
---------------------------------------------------------------------
Verify Preorder Serialization of a Binary Tree
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/verify-preorder-serialization-of-a-binary-tree"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/verify-preorder-sequence-in-binary-search-tree][Verify Preorder Sequence in Binary Search Tree]]
- [[https://code.dennyzhang.com/review-binarytree][Review: Binary Tree Problems]]
- [[https://code.dennyzhang.com/review-manydetails][Review: Problems With Many Details]]
- Tag: [[https://code.dennyzhang.com/tag/manydetails][#manydetails]],  [[https://code.dennyzhang.com/tag/binarytree][#binarytree]]
---------------------------------------------------------------------
One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as #.
#+BEGIN_EXAMPLE
     _9_
    /   \
   3     2
  / \   / \
 4   1  #  6
/ \ / \   / \
# # # #   # #
#+END_EXAMPLE

For example, the above binary tree can be serialized to the string "9,3,4,#,#,1,#,#,2,#,6,#,#", where # represents a null node.

Given a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.

Each comma separated value in the string must be either an integer or a character '#' representing null pointer.

You may assume that the input format is always valid, for example it could never contain two consecutive commas such as "1,,3".

#+BEGIN_EXAMPLE
Example 1:
"9,3,4,#,#,1,#,#,2,#,6,#,#"
Return true
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:
"1,#"
Return false
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 3:
"9,#,#,1"
Return false
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/verify-preorder-serialization-of-a-binary-tree][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/verify-preorder-serialization-of-a-binary-tree
## Basic Ideas: Stack
##      If number, push.
##      If #, check stack head. 
##         If empty, return false; 
##         If #, the next element should be a node value. If not, return False
##         Pop them both. Keep checking, then push #
##      At the end, stack should have only one element. And it's #
##
##  Sample data: "#"
## Complexity: Time O(n), Space O(n)
class Solution(object):
    def isValidSerialization(self, preorder):
        """
        :type preorder: str
        :rtype: bool
        """
        stack = []
        for element in preorder.split(','):
            if element != '#':
                stack.append(element)
            else:
                while True:
                    if len(stack) <= 1:
                        stack.append('#')
                        break
                    if stack[-1] != '#':
                        stack.append('#')
                        break
                    if stack[-1] == '#' and stack[-2] == '#': return False
                    # pop #, then pop value. Then plan to insert another '#'
                    stack.pop()
                    stack.pop()
                else:
                    stack.append(element)
        return stack == ['#']
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
