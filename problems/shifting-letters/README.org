* Leetcode: Shifting Letters                                     :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string, leftrightpass
:END:
---------------------------------------------------------------------
Shifting Letters
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shifting-letters"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- Tag: [[https://code.dennyzhang.com/tag/string][#string]], [[https://code.dennyzhang.com/tag/leftrightpass][#leftrightpass]]
---------------------------------------------------------------------
We have a string S of lowercase letters, and an integer array shifts.

Call the shift of a letter, the next letter in the alphabet, (wrapping around so that 'z' becomes 'a'). 

For example, shift('a') = 'b', shift('t') = 'u', and shift('z') = 'a'.

Now for each shifts[i] = x, we want to shift the first i+1 letters of S, x times.

Return the final string after all such shifts to S are applied.

Example 1:
#+BEGIN_EXAMPLE
Input: S = "abc", shifts = [3,5,9]
Output: "rpl"
Explanation: 
We start with "abc".
After shifting the first 1 letters of S by 3, we have "dbc".
After shifting the first 2 letters of S by 5, we have "igc".
After shifting the first 3 letters of S by 9, we have "rpl", the answer.
#+END_EXAMPLE

Note:

1. 1 <= S.length = shifts.length <= 20000
- 0 <= shifts[i] <= 10 ^ 9

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shifting-letters][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/shifting-letters/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/shifting-letters
// Basic Ideas: One pass
//  From right to left
// Complexity: Time O(n), Space O(1)
func shiftingLetters(S string, shifts []int) string {
    v := 0
    for i:=len(shifts)-1; i>=0; i-- {
        v = (v+shifts[i])%26
        shifts[i] = v
    }
    
    res := ""
    code := 0
    for i, ch := range S {
        code = (int(ch-'a')+shifts[i])%26
        res += string(code+int('a'))
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
