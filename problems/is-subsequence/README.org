* Leetcode: Is Subsequence                                       :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     subsequence
:END:
---------------------------------------------------------------------
Is Subsequence
---------------------------------------------------------------------
Similar Problems:
- Tag: [[https://code.dennyzhang.com/category/basic][#basic]]
---------------------------------------------------------------------
Given a string s and a string t, check if s is subsequence of t.

You may assume that there is only lower case English letters in both s and t. t is potentially a very long (length ~= 500,000) string, and s is a short string (<=100).

A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, "ace" is a subsequence of "abcde" while "aec" is not).

Example 1:
#+BEGIN_EXAMPLE
s = "abc", t = "ahbgdc"

Return true.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
s = "axc", t = "ahbgdc"

Return false.
#+END_EXAMPLE

Follow up:
If there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/is-subsequence][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/is-subsequence/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/is-subsequence
## Basic Ideas: Greedy + Two pointer
##
## Complexity: Time O(1), Space O(1).
class Solution:
    def isSubsequence(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        length = len(s)
        if length == 0: return True
        index = 0
        for i in range(0, len(t)):
            if t[i] == s[index]: index += 1
            if index == length: return True
        return False
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
