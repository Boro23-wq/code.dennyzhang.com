* Leetcode: Sort Transformed Array                               :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     inspiring, math
:END:
---------------------------------------------------------------------
Sort Transformed Array
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/sort-transformed-array"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/split-array-with-same-average][Split Array With Same Average]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-math][#math]], [[https://code.dennyzhang.com/review-inspiring][#inspiring]]
---------------------------------------------------------------------
Given a sorted array of integers nums and integer values a, b and c. Apply a quadratic function of the form f(x) = ax*x + bx + c to each element x in the array.

The returned array must be in sorted order.

Expected time complexity: O(n)

Example:
#+BEGIN_EXAMPLE
nums = [-4, -2, 2, 4], a = 1, b = 3, c = 5,

Result: [3, 9, 15, 33]
#+END_EXAMPLE

#+BEGIN_EXAMPLE
nums = [-4, -2, 2, 4], a = -1, b = 3, c = 5

Result: [-23, -5, 1, 7]
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/sort-transformed-array][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/sort-transformed-array/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/sort-transformed-array
// Basic Ideas: math. two-pointer
// f(x) = a*x*x+b*x+c
//   Let's say x1<x2<x3.
//   If a>=0, f(x2) <= max(f(x1), f(x3))
//   Else, f(x2) >= min(f(x1), f(x3))
// So we can get the biggest value, either from the left or the right
// Complexity: Time O(n), Space O(n)
func sortTransformedArray(nums []int, a int, b int, c int) []int {
    nums2 := make([]int, len(nums))
    for i, x:= range nums { nums2[i] = a*x*x+b*x+c }
    index := 0
    // We know the maximum first
    if a>=0 { index = len(nums)-1 }
    res := make([]int, len(nums))
    l, r := 0, len(nums)-1
    for l<=r {
        if a>=0 {
            // We know the maximum first
            if nums2[l]>nums2[r] {
                res[index] = nums2[l]
                l++
            } else {
                res[index] = nums2[r]
                r--
            }
            index--
        } else {
            // We know the minimum first
            if nums2[l]<nums2[r] {
                res[index] = nums2[l]
                l++
            } else {
                res[index] = nums2[r]
                r--
            }
            index++
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
