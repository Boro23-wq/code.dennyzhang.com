* Leetcode: Occurrences After Bigram                             :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string
:END:
---------------------------------------------------------------------
Occurrences After Bigram
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/occurrences-after-bigram"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-string][#string]]
---------------------------------------------------------------------
Given words first and second, consider occurrences in some text of the form "first second third", where second comes immediately after first, and third comes immediately after second.

For each such occurrence, add "third" to the answer, and return the answer.
 
Example 1:
#+BEGIN_EXAMPLE
Input: text = "alice is a good girl she is a good student", first = "a", second = "good"
Output: ["girl","student"]
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: text = "we will we will rock you", first = "we", second = "will"
Output: ["we","rock"]
#+END_EXAMPLE
 
Note:

1. 1 <= text.length <= 1000
- text consists of space separated words, where each word consists of lowercase English letters.
- 1 <= first.length, second.length <= 10
- first and second consist of lowercase English letters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/occurrences-after-bigram][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/occurrences-after-bigram/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/occurrences-after-bigram
// Basic Ideas: compare
// Complexity: Time O(n), Space O(1)
import "strings"
func findOcurrences(text string, first string, second string) []string {
    res := []string{}
    l := strings.Split(text, " ")
    for i:=0; i<len(l)-2; i++ {
        if l[i] == first && l[i+1] == second {
            res = append(res, l[i+2])
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
