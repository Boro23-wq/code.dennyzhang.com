* Leetcode: Random Pick with Weight                             :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     binarysearch, presum, random
:END:
---------------------------------------------------------------------
Identity number which appears exactly once.
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/random-pick-with-weight"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/followup-presum][#presum]], [[https://code.dennyzhang.com/review-binarysearch][#binarysearch]], [[https://code.dennyzhang.com/review-random][#random]]
---------------------------------------------------------------------
Given an array w of positive integers, where w[i] describes the weight of index i, write a function pickIndex which randomly picks an index in proportion to its weight.

Note:

1. 1 <= w.length <= 10000
- 1 <= w[i] <= 10^5
- pickIndex will be called at most 10000 times.

Example 1:
#+BEGIN_EXAMPLE
Input: 
["Solution","pickIndex"]
[[[1]],[]]
Output: [null,0]
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: 
["Solution","pickIndex","pickIndex","pickIndex","pickIndex","pickIndex"]
[[[1,3]],[],[],[],[],[]]
Output: [null,0,1,1,1,0]
#+END_EXAMPLE

Explanation of Input Syntax:
#+BEGIN_EXAMPLE
The input is two lists: the subroutines called and their arguments. Solution's constructor has one argument, the array w. pickIndex has no arguments. Arguments are always wrapped with a list, even if there aren't any.
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/random-pick-with-weight][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/random-pick-with-weight/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/random-pick-with-weight
// Basic Ideas: presum + binarysearch
//
// Complexity: Time O(log(n)), Space O(n)
import "math/rand"
type Solution struct {
    presums []int
}


func Constructor(w []int) Solution {
    presums := make([]int, len(w))
    sum := 0
    for i, v := range w {
        sum += v
        presums[i] = sum
    }
    return Solution{presums:presums}
}

func (this *Solution) PickIndex() int {
    target := rand.Intn(this.presums[len(this.presums)-1])+1
    left, right := 0, len(this.presums)
    // result must exist in the list
    for left < right {
        mid := (right-left)/2+left
        if this.presums[mid] < target {
            // search right half
            left = mid+1
        } else {
            right = mid
        }
    }
    return left
}

/**
 * Your Solution object will be instantiated and called as such:
 * obj := Constructor(w);
 * param_1 := obj.PickIndex();
 */
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
