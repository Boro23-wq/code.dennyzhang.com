* Leetcode: Kth Smallest Element in a Sorted Matrix             :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     heap, topk
:END:
---------------------------------------------------------------------
Kth Smallest Element in a Sorted Matrix
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/kth-smallest-element-in-a-sorted-matrix"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/search-a-2d-matrix-ii][Search a 2D Matrix II]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-heap][#heap]], [[https://code.dennyzhang.com/followup-topk][topk]]
---------------------------------------------------------------------
Given a n x n matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.

Note that it is the kth smallest element in the sorted order, not the kth distinct element.

Example:
#+BEGIN_EXAMPLE
matrix = [
   [ 1,  5,  9],
   [10, 11, 13],
   [12, 13, 15]
],
k = 8,

return 13.
#+END_EXAMPLE

Note: 
You may assume k is always valid, 1 <= k <= n2.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/kth-smallest-element-in-a-sorted-matrix][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// https://code.dennyzhang.com/kth-smallest-element-in-a-sorted-matrix
// Basic Ideas: max heap
//
// Complexity: Time O(n*n*log(k)), Space O(k)
import "container/heap"

type IntHeap []int

func (h IntHeap) Len() int { return len(h) }
func (h IntHeap) Less(i, j int) bool { return h[i]>h[j] }
func (h IntHeap) Swap(i, j int) { h[i], h[j] = h[j], h[i] }
func (h *IntHeap) Pop()interface{} {
    old := *h
    size := len(old)
    res := old[size-1]
    *h = old[0:size-1]
    return res
}
func (h *IntHeap) Push(x interface{}) {
    *h = append(*h, x.(int))
}

func kthSmallest(matrix [][]int, k int) int {
    h := &IntHeap{}
    heap.Init(h)
    for _, row := range matrix {
        for _, val := range row {
            heap.Push(h, val)
            if h.Len() > k {
                heap.Pop(h)
            }
        }
    }
    return heap.Pop(h).(int)
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
