* Leetcode: Ternary Expression Parser                           :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dfs, stack, expression
:END:
---------------------------------------------------------------------
Ternary Expression Parser
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/ternary-expression-parser"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-dfs][#dfs]], [[https://code.dennyzhang.com/review-stack][#stack]], [[https://code.dennyzhang.com/tag/expression][#expression]]
---------------------------------------------------------------------

Given a string representing arbitrarily nested ternary expressions, calculate the result of the expression. You can always assume that the given expression is valid and only consists of digits 0-9, ?, :, T and F (T and F represent True and False respectively).

Note:

1. The length of the given string is <= 10000.
- Each number will contain only one digit.
- The conditional expressions group right-to-left (as usual in most languages).
- The condition will always be either T or F. That is, the condition will never be a digit.
- The result of the expression will always evaluate to either a digit 0-9, T or F.

Example 1:
#+BEGIN_EXAMPLE
Input: "T?2:3"

Output: "2"

Explanation: If true, then result is 2; otherwise result is 3.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: "F?1:T?4:5"

Output: "4"

Explanation: The conditional expressions group right-to-left. Using parenthesis, it is read/evaluated as:

    "(F ? 1 : (T ? 4 : 5))"          "(F ? 1 : (T ? 4 : 5))"
 -> "(F ? 1 : 4)"            or   -> "(T ? 4 : 5)"
 -> "4"                           -> "4"
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: "T?T?F:5:3"

Output: "F"

Explanation: The conditional expressions group right-to-left. Using parenthesis, it is read/evaluated as:

    "(T ? (T ? F : 5) : 3)"        "(T ? (T ? F : 5) : 3)"
 -> "(T ? F : 3)"           or  -> "(T ? F : 5)"
 -> "F"                         -> "F"
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/ternary-expression-parser][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/ternary-expression-parser/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// https://code.dennyzhang.com/ternary-expression-parser

#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
