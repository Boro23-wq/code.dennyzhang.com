* Leetcode: Broken Calculator                                    :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     greedy, reachpoint
:END:
---------------------------------------------------------------------
Broken Calculator
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/broken-calculator"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/followup-reachpoint][#reachpoint]]
---------------------------------------------------------------------
On a broken calculator that has a number showing on its display, we can perform two operations:

Double: Multiply the number on the display by 2, or;
Decrement: Subtract 1 from the number on the display.
Initially, the calculator is displaying the number X.

Return the minimum number of operations needed to display the number Y.

Example 1:
#+BEGIN_EXAMPLE
Input: X = 2, Y = 3
Output: 2
Explanation: Use double operation and then decrement operation {2 -> 4 -> 3}.
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: X = 5, Y = 8
Output: 2
Explanation: Use decrement and then double {5 -> 4 -> 8}.
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: X = 3, Y = 10
Output: 3
Explanation:  Use double, decrement and double {3 -> 6 -> 5 -> 10}.
#+END_EXAMPLE

Example 4:
#+BEGIN_EXAMPLE
Input: X = 1024, Y = 1
Output: 1023
Explanation: Use decrement operations 1023 times.
#+END_EXAMPLE
 
Note:

1. 1 <= X <= 10^9
- 1 <= Y <= 10^9

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/broken-calculator][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/broken-calculator/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/broken-calculator
// Basic Ideas:
//  If X==Y, return 0
//  If X>Y, need to move step by step
//  If X<Y, 
//      If y is odd, check x with y+1
//      
// Complexity: Time ? Space ?
func brokenCalc(X int, Y int) int {
    if X>=Y {
        return X-Y
    }
    res := 0
    if Y%2 == 1 {
        res = brokenCalc(X, Y+1)+1
    } else {
        res = brokenCalc(X, Y/2)+1
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
