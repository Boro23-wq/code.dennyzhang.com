* Leetcode: Symmetric Tree                                      :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     treetraversal, bfs, dfs
:END:
---------------------------------------------------------------------
Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/symmetric-tree"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-treetraversal][#treetraversal]], [[https://code.dennyzhang.com/review-bfs][#bfs]], [[https://code.dennyzhang.com/review-dfs][#dfs]]
---------------------------------------------------------------------
Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).
#+BEGIN_EXAMPLE
For example, this binary tree [1,2,2,3,4,4,3] is symmetric:

    1
   / \
  2   2
 / \ / \
3  4 4  3
But the following [1,2,2,null,3,null,3] is not:
    1
   / \
  2   2
   \   \
   3    3
#+END_EXAMPLE

Note:
Bonus points if you could solve it both recursively and iteratively.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/symmetric-tree][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/symmetric-tree/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: dfs
#+BEGIN_SRC python
## https://code.dennyzhang.com/symmetric-tree
## Basic Ideas: recursive (pre-order)
##
## Complexity: Time O(n), Space O(n)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:
        def myIsSymmetric(root1, root2):
            if (not root1) and (not root2): return True
            if (not root1) or (not root2) or root1.val != root2.val:
                return False
            return myIsSymmetric(root1.left, root2.right) and myIsSymmetric(root1.right, root2.left)
        if not root: return True
        return myIsSymmetric(root.left, root.right)        
#+END_SRC

- Solution:
#+BEGIN_SRC go
// https://code.dennyzhang.com/symmetric-tree
// Basic Ideas: BFS
// Complexity: Time O(n), Space O(n)
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */

/**
 * @param root: root of the given tree
 * @return: whether it is a mirror of itself 
 */
func isSymmetric (root *TreeNode) bool {
    if root == nil { return true }
    queue := []*TreeNode{root}
    for len(queue) != 0 {
        l, l2 := []*TreeNode{}, []*TreeNode{}
        for _, node := range queue {
            if node.Left != nil { l = append(l, node.Left) }
            if node.Right != nil { l = append(l, node.Right) }
            l2 = append(l2, node.Left)
            l2 = append(l2, node.Right)
        }
        // check is sysmetric
        left, right := 0, len(l2) - 1
        for left < right {
            if l2[left] == nil || l2[right] == nil {
                if l2[left] != l2[right] { return false }
            } else {
                if l2[left].Val != l2[right].Val { return false }
            }
            left, right = left+1, right-1
        }
        
        queue = l
    }
    return true
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
