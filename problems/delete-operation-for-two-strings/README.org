* Leetcode: Delete Operation for Two Strings                     :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, padplaceholder, editdistance
:END:
---------------------------------------------------------------------
Delete Operation for Two Strings
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/delete-operation-for-two-strings"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/followup-editdistance][Series: Edit Distance Of Two Strings & Follow-up]]
- [[https://code.dennyzhang.com/edit-distance][Leetcode: Edit Distance]]
- [[https://code.dennyzhang.com/maximum-length-of-repeated-subarray][Maximum Length of Repeated Subarray]]
- [[https://code.dennyzhang.com/interleaving-string][Interleaving String]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/tag/editdistance][#editdistance]]
---------------------------------------------------------------------
Given two words word1 and word2, find the minimum number of steps required to make word1 and word2 the same, where in each step you can delete one character in either string.
#+BEGIN_EXAMPLE
Example 1:
Input: "sea", "eat"
Output: 2
Explanation: You need one step to make "sea" to "ea" and another step to make "eat" to "ea".
#+END_EXAMPLE
Note:
1. The length of given words won't exceed 500.
- Characters in given words can only be lower-case letters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/delete-operation-for-two-strings][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/delete-operation-for-two-strings/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// https://code.dennyzhang.com/delete-operation-for-two-strings
// Basic Ideas: dynamic programming
//
// dp(i, j): make word1[0:i] and word2[0:j]
//
// Complexity: Time O(n*m), Space O(n)
func minDistance(word1 string, word2 string) int {
    dp := make([]int, len(word2)+1)
    for i, _ := range dp { dp[i] = i }
    for i:=1; i<=len(word1); i++ {
        prev := i-1
        dp[0] = i
        for j:=1; j<=len(word2); j++ {
            cur := -1
            if word1[i-1] == word2[j-1] { 
                cur = prev
            } else {
               // delete word1[i]
                v := dp[j]+1
                // delete word2[j]
                if v>dp[j-1]+1 { v = dp[j-1]+1 }
                cur = v
            }
            prev = dp[j]
            dp[j] = cur
        }
    }
    return dp[len(word2)]
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
