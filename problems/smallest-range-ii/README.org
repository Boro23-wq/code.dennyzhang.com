* Leetcode: Smallest Range II                                    :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     interval, greedy, redo
:END:
---------------------------------------------------------------------
Smallest Range II
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/smallest-range-ii"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/smallest-range-i][Leetcode: Smallest Range I]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-interval][#interval]], [[https://code.dennyzhang.com/review-greedy][#greedy]]
---------------------------------------------------------------------
Given an array A of integers, for each integer A[i] we need to choose either x = -K or x = K, and add x to A[i] (only once).

After this process, we have some array B.

Return the smallest possible difference between the maximum value of B and the minimum value of B.
 
Example 1:
#+BEGIN_EXAMPLE
Input: A = [1], K = 0
Output: 0
Explanation: B = [1]
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: A = [0,10], K = 2
Output: 6
Explanation: B = [2,8]
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: A = [1,3,6], K = 3
Output: 3
Explanation: B = [4,6,3]
#+END_EXAMPLE
 
Note:

1. 1 <= A.length <= 10000
- 0 <= A[i] <= 10000
- 0 <= K <= 10000

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/smallest-range-ii][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/smallest-range-ii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/smallest-range-ii
// Basic Ideas: greedy
//
//   Sort the list. The initial difference is A[N-1]-A[0]
//
//   Try to add for small values, subtract for big values
//   For the biggest value, we always substract. 
//   And for the smallest, we always add.
//
// Complexity: Time O(n*log(n)), Space O(1)
import "sort"
func min(x, y int)int {
    if x>y {
        return y
    } else {
        return x
    }
}

func max(x, y int)int {
    if x>y {
        return x
    } else {
        return y
    }
}

func smallestRangeII(A []int, K int) int {
    sort.Ints(A)
    res := A[len(A)-1]-A[0]
    for i:=0; i+1<len(A); i++ {
        high := max(A[len(A)-1]-K, A[i]+K)
        low := min(A[0]+K, A[i+1]-K)
        res = min(res, high-low)
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
