* Leetcode: Find the Closest Palindrome                           :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     palindrome
:END:
---------------------------------------------------------------------
Find the Closest Palindrome
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/review-palindrome][Review: Palindrome Problems]], [[https://code.dennyzhang.com/tag/palindrome][Tag: #palindrome]]
---------------------------------------------------------------------
Given an integer n, find the closest integer (not including itself), which is a palindrome.

The 'closest' is defined as absolute difference minimized between two integers.
#+BEGIN_EXAMPLE
Example 1:
Input: "123"
Output: "121"
#+END_EXAMPLE

Note:
1. The input n is a positive integer represented by string, whose length will not exceed 18.
- If there is a tie, return the smaller one as answer.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/find-the-closest-palindrome][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/find-the-closest-palindrome/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/find-the-closest-palindrome
## Basic Ideas: Greedy. Try our best to keep the high digits
##
## Complexity: Time O(n), Space O(1)
class Solution(object):
    def nearestPalindromic(self, n):
        """
        :type n: str
        :rtype: str
        """
        length = len(n)
        if length == 1: return str(int(n)-1)
        
        k = int(length/2)
        first_half = n[0:k]
        # why this?
        # 10 -> 9
        if length%2 == 1:
            n2="%s%s%s" % (first_half, n[k], first_half[::-1])
        else:
            n2="%s%s" % (first_half, first_half[::-1])

        if n!= n2: return n2

        if length%2==1:
            # 20202 -> 20102
            if n[k+1] == '0': ch = '1'
            else: ch = str(int(n[k])-1)
            return "%s%s%s" % (first_half, ch, first_half[::-1])
        else:
            if n[k] == '0': ch = '1'
            else: ch = str(int(n[k-1])-1)
            res = "%s%s%s%s" % (first_half[:-1], ch, ch, first_half[:-1][::-1])
            ## 11 -> 00 -> 0
            return str(int(res))
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML
