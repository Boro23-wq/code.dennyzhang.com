* LintCode: Prime Product                                        :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     combination, classic, inspiring
:END:
---------------------------------------------------------------------
Prime Product
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/prime-product"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/review-combination][#combination]]
---------------------------------------------------------------------
Given a non-repeating prime array arr, and each prime number is used at most once, find all the product without duplicate and sort them from small to large.

Notice
- 2 <= |arr| <= 9
- 2 <= arr[i] <= 23

Example
#+BEGIN_EXAMPLE
Given arr = [2,3], return [6].

Explanation:
2 * 3 = 6.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Gven arr = [2,3,5], return [6,10,15,30].

Explanation:
2 * 3 = 6, 2 * 5 = 10, 3 * 5 = 15, 2 * 3 *5 = 30
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/prime-product][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/prime-product/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/prime-product
class Solution:
    """
    @param arr: The prime array
    @return: Return the array of all of prime product
    """
    def getPrimeProduct(self, arr):
        ## Basic Ideas: BFS
        ## Complexity: Time O(1), Space O(1)
        arr.sort()
        # 2, 3, 5, 7
        #    23, 25, 27; 35, 37
        #    235, 237; 257; 357
        import collections
        queue = collections.deque()
        for i, num in enumerate(arr):
            if i == len(arr)-1: continue
            queue.append((num, i))
        
        res = []
        while len(queue) != 0:
            for i in range(len(queue)):
                (num, index) = queue.popleft()
                for j in range(index+1, len(arr)):
                    queue.append((num*arr[j], j))
                    res.append(num*arr[j])
        return sorted(res)
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
