* LeetCode: Pseudo-Palindromic Paths in a Binary Tree           :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dfs, binarytree
:END:
---------------------------------------------------------------------
Pseudo-Palindromic Paths in a Binary Tree
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/pseudo-palindromic-paths-in-a-binary-tree"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: LeetCode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-binarytree][#binarytree]], [[https://code.dennyzhang.com/review-dfs][dfs]]
---------------------------------------------------------------------
Given a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be pseudo-palindromic if at least one permutation of the node values in the path is a palindrome.

Return the number of pseudo-palindromic paths going from the root node to leaf nodes.

Example 1:
[[image-blog:Pseudo-Palindromic Paths in a Binary Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/pseudo-palindromic-paths-in-a-binary-tree/1.png]]
#+BEGIN_EXAMPLE
Input: root = [2,3,1,3,1,null,1]
Output: 2 
Explanation: The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the red path [2,3,3], the green path [2,1,1], and the path [2,3,1]. Among these paths only red path and green path are pseudo-palindromic paths since the red path [2,3,3] can be rearranged in [3,2,3] (palindrome) and the green path [2,1,1] can be rearranged in [1,2,1] (palindrome).
#+END_EXAMPLE

Example 2:
[[image-blog:Pseudo-Palindromic Paths in a Binary Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/pseudo-palindromic-paths-in-a-binary-tree/2.png]]
#+BEGIN_EXAMPLE
Input: root = [2,1,1,1,3,null,null,null,null,null,1]
Output: 1 
Explanation: The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the green path [2,1,1], the path [2,1,3,1], and the path [2,1]. Among these paths only the green path is pseudo-palindromic since [2,1,1] can be rearranged in [1,2,1] (palindrome).
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: root = [9]
Output: 1
#+END_EXAMPLE
 
Constraints:

- The given binary tree will have between 1 and 10^5 nodes.
- Node values are digits from 1 to 9.


Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/pseudo-palindromic-paths-in-a-binary-tree][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC python
## https://code.dennyzhang.com/pseudo-palindromic-paths-in-a-binary-tree
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pseudoPalindromicPaths (self, root: TreeNode) -> int:
        res = 0
        cnts = [0]*9
        def dfs(root):
            nonlocal cnts, res
            if not root: return
            cnts[root.val-1] += 1

            # leaf
            if not root.left and not root.right:
                # check the path
                nomatch = 0
                for i in range(9):
                    if cnts[i]%2 == 1: nomatch += 1
                if nomatch <= 1:
                    res += 1

            dfs(root.left)
            dfs(root.right)
            cnts[root.val-1] -= 1
        dfs(root)
        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
