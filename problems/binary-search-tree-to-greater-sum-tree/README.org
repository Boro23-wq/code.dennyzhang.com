* Leetcode: Binary Search Tree to Greater Sum Tree               :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     treetraversal
:END:
---------------------------------------------------------------------
Binary Search Tree to Greater Sum Tree
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-search-tree-to-greater-sum-tree"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/convert-bst-to-greater-tree][Convert BST to Greater Tree]]
- Tag: [[https://code.dennyzhang.com/review-treetraversal][#treetraversal]]
---------------------------------------------------------------------
Given the root of a binary search tree with distinct values, modify it so that every node has a new value equal to the sum of the values of the original tree that are greater than or equal to node.val.

As a reminder, a binary search tree is a tree that satisfies these constraints:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.
 
Example 1:
#+BEGIN_EXAMPLE
Input: [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]
Output: [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]
#+END_EXAMPLE

[[image-blog:Binary Search Tree to Greater Sum Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/binary-search-tree-to-greater-sum-tree/tree.png]]

Note:

1. The number of nodes in the tree is between 1 and 100.
- Each node will have value between 0 and 100.
- The given tree is a binary search tree.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/binary-search-tree-to-greater-sum-tree][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// Blog link: https://code.dennyzhang.com/binary-search-tree-to-greater-sum-tree
// Basic Idea: tree transeveral: right, middle, left
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */

func dfs(root *TreeNode, val *int) {
	if root == nil {
		return
	}

	if root.Right != nil {
		dfs(root.Right, val)
	}

	*val += root.Val
	root.Val = *val

	if root.Left != nil {
		dfs(root.Left, val)
	}
}

func bstToGst(root *TreeNode) *TreeNode {
	val := 0
	dfs(root, &val)
	return root
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
