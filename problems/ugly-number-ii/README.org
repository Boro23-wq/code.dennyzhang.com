* Leetcode: Ugly Number II                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     dynamicprogramming, uglynumber, redo, inspiring
:END:
---------------------------------------------------------------------
Ugly Number II
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/ugly-number-ii"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/ugly-number][LeetCode: Ugly Number]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/followup-uglynumber][#uglynumber]]
---------------------------------------------------------------------
Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.

Note that 1 is typically treated as an ugly number, and n does not exceed 1690.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/ugly-number-ii][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/ugly-number-ii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// https://code.dennyzhang.com/ugly-number-ii
// Basic Ideas: dynamic programming + 3 pointers
//
// From current ugly number, generate the next one
//
// Complexity
func min(nums []int) int {
    res := nums[0]
    for i:=1; i<len(nums); i++ {
        if nums[i] < res {
            res = nums[i]
        }
    }
    return res
}

func nthUglyNumber(n int) int {
    dp := make([]int, 1690)
    dp[0] = 1
    i2, i3, i5 := 0, 0, 0
    for i:=1; i<n; i++ {
        dp[i] = min([]int{dp[i2]*2, dp[i3]*3, dp[i5]*5})
        if dp[i] == dp[i2]*2 {
            i2++
        }
        if dp[i] == dp[i3]*3 {
            i3++
        }
        if dp[i] == dp[i5]*5 {
            i5++
        }
    }
    return dp[n-1]
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
