* Leetcode: Remove Interval                                     :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     meetingconflict, binarysearch
:END:
---------------------------------------------------------------------
Remove Interval
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-interval"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- Tag: [[https://code.dennyzhang.com/followup-meetingconflict][meetingconflict]], [[https://code.dennyzhang.com/review-binarysearch][binarysearch]]
---------------------------------------------------------------------
Given a sorted list of disjoint intervals, each interval intervals[i] = [a, b] represents the set of real numbers x such that a <= x < b.

We remove the intersections between any interval in intervals and the interval toBeRemoved.

Return a sorted list of intervals after all such removals.

Example 1:
#+BEGIN_EXAMPLE
Input: intervals = [[0,2],[3,4],[5,7]], toBeRemoved = [1,6]
Output: [[0,1],[6,7]]
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: intervals = [[0,5]], toBeRemoved = [2,3]
Output: [[0,2],[3,5]]
#+END_EXAMPLE
 
Constraints:

- 1 <= intervals.length <= 10^4
- -10^9 <= intervals[i][0] < intervals[i][1] <= 10^9

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/remove-interval][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/remove-interval/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/remove-interval
// Basic Ideas: binary search
//
// Complexity: Time O(log(n)), Space O(n)
func max(x, y int) int {
    if x>y {
        return x
    } else {
        return y
    }
}

func min(x, y int) int {
    if x>y {
        return y
    } else {
        return x
    }
}

func removeInterval(intervals [][]int, toBeRemoved []int) [][]int {
    if toBeRemoved[0] >= intervals[len(intervals)-1][1] || toBeRemoved[1] <= intervals[0][0] {
        return intervals
    }
    if toBeRemoved[0] < intervals[0][0] {
        toBeRemoved[0] = intervals[0][0]
    }
    if toBeRemoved[1] > intervals[len(intervals)-1][1] {
        toBeRemoved[1] = intervals[len(intervals)-1][1]
    }

    start := -1
    left, right := 0, len(intervals)-1
    // may not exists
    for left <= right {
        mid := (right-left)/2+left
        if intervals[mid][0] == toBeRemoved[0] {
            start = mid
            break
        }
        if intervals[mid][0] > toBeRemoved[0] {
            right = mid - 1
        } else {
            left = mid + 1
        }
    }
    if start == -1 {
        start = right
    }

    end := -1
    left, right = 0, len(intervals)-1
    // may not exists
    for left <= right {
        mid := (right-left)/2+left
        if intervals[mid][1] == toBeRemoved[1] {
            end = mid
            break
        }
        if intervals[mid][1] > toBeRemoved[1] {
            right = mid - 1
        } else {
            left = mid + 1
        }
    }
    if end == -1 {
        end = left
    }

    res := [][]int{}
    res = append(res, intervals[0:start]...)
    
    interval := intervals[start]
    toBeRemoved[0] = min(toBeRemoved[0], interval[1])
    if interval[0] != toBeRemoved[0] {
        res = append(res, []int{interval[0], toBeRemoved[0]})
    }

    interval = intervals[end]
    toBeRemoved[1] = max(toBeRemoved[1], interval[0])
    if toBeRemoved[1] != interval[1] {
        res = append(res, []int{toBeRemoved[1], interval[1]})
    }

    if end+1 < len(intervals) {
        res = append(res, intervals[end+1:]...)
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
