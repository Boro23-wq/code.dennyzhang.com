* Leetcode: Range Sum Query - Mutable                                   :BLOG:Amusing:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     oodesign, concurrency, classic, segmenttree
:END:
---------------------------------------------------------------------
Range Sum Query - Mutable
---------------------------------------------------------------------
Similar Problems:
- [[https://code.dennyzhang.com/range-addition][Range Addition]]
- [[https://code.dennyzhang.com/review-segmenttree][Review: Segment Tree Problems]]
- [[https://code.dennyzhang.com/review-concurrency][Review: Concurrency Problems]]
- [[https://code.dennyzhang.com/review-oodesign][Review: Object-Oriented Design Problems]]
- Tag: [[https://code.dennyzhang.com/tag/oodesign][oodesign]], [[https://code.dennyzhang.com/tag/segmenttree][#segmenttree]], [[https://code.dennyzhang.com/tag/concurrency][#concurrency]]
---------------------------------------------------------------------
Related Reading: [[https://www.geeksforgeeks.org/segment-tree-set-1-sum-of-given-range/][Segment Tree by geeksforgeeks.org]]

Given an integer array nums, find the sum of the elements between indices i and j (i <= j), inclusive.

The update(i, val) function modifies nums by updating the element at index i to val.
#+BEGIN_EXAMPLE
Example:
Given nums = [1, 3, 5]

sumRange(0, 2) -> 9
update(1, 2)
sumRange(0, 2) -> 8
#+END_EXAMPLE
Note:
- The array is only modifiable by the update function.
- You may assume the number of calls to update and sumRange function is distributed evenly.

#+BEGIN_EXAMPLE
What if, update and sumRange function is not distributed evenly? 

Let's say, the ratio of update_count/sumRange_count is 10000 or 0.0001?
#+END_EXAMPLE

Github: [[https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/problems/range-sum-query-mutable][challenges-leetcode-interesting]]

Credits To: [[https://leetcode.com/problems/range-sum-query-mutable/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## Blog link: https://code.dennyzhang.com/range-sum-query-mutable
class NumArray(object):

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        

    def update(self, i, val):
        """
        :type i: int
        :type val: int
        :rtype: void
        """
        

    def sumRange(self, i, j):
        """
        :type i: int
        :type j: int
        :rtype: int
        """
        


# Your NumArray object will be instantiated and called as such:
# obj = NumArray(nums)
# obj.update(i,val)
# param_2 = obj.sumRange(i,j)
#+END_SRC
