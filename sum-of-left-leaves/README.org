* Leetcode: Sum of Left Leaves                                   :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     #binarytree, #codetemplate
:END:
---------------------------------------------------------------------
Sum of Left Leaves
---------------------------------------------------------------------
Find the sum of all left leaves in a given binary tree.
#+BEGIN_EXAMPLE
Example:

    3
   / \
  9  20
    /  \
   15   7
#+END_EXAMPLE

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.

Blog link: http://brain.dennyzhang.com/sum-of-left-leaves

Github: [[url-external:https://github.com/DennyZhang/challenges-leetcode-interesting/tree/master/sum-of-left-leaves][challenges-leetcode-interesting]]

Credits To: [[url-external:https://leetcode.com/problems/sum-of-left-leaves/description][leetcode.com]]

Leave me comments, if you know how to solve.

#+BEGIN_SRC python
class Solution(object):
    ## Idea: BFS. (element, is_left)
    ##       DFS
    ## Complexity: 
    def sumOfLeftLeaves(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if root is None:
            return 0
        if root.left is None and root.right is None:
            return 0

        return self._sumOfLeftLeaves(root, False)

    def _sumOfLeftLeaves(self, root, is_left):
        if root is None:
            return 0

        if root.left is None and root.right is None:
            if is_left:
                return root.val
            else:
                return 0

        sum_value = 0
        if root.left:
            sum_value += self._sumOfLeftLeaves(root.left, True)

        if root.right:
            sum_value += self._sumOfLeftLeaves(root.right, False)

        return sum_value
#+END_SRC
